module User where

-- -- MAIN_TEMPLATE_BEGIN
-- template User with
--     username: Party
--     following: [Party]
--   where
--     signatory username
--     observer following
-- -- MAIN_TEMPLATE_END

--     key username: Party
--     maintainer key

--     -- FOLLOW_BEGIN
--     nonconsuming choice Follow: ContractId User with
--         userToFollow: Party
--       controller username
--       do
--         assertMsg "You cannot follow yourself" (userToFollow /= username)
--         assertMsg "You cannot follow the same user twice" (notElem userToFollow following)
--         archive self
--         create this with following = userToFollow :: following
--     -- FOLLOW_END

-- run = scenario do
--     voter <- getParty "Voter"
--     dave <- getParty "Dave"
--     cid <- submit dave do
--         userToFollow: voter
template Ballot
    with
        creator : Party
        proposal : Text
    where
        signatory creator
        
        

template Token
  with
    voter : Party
    vote: Text
  where
    signatory voter

token_test_1 = scenario do
    steve <- getParty "Steve"
    submit steve do
        create Ballot with creator = steve; proposal = "vote here"
        
    alice <- getParty "Alice"
    submit alice do
        create Token with voter = alice; vote = "Yes"