{"ast":null,"code":"var _jsxFileName = \"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteManagement.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Paper, Typography, Container, Grid, Divider, Box, Button, List, ListItem, ListItemText } from \"@mui/material\";\nimport { useLedger, useStreamQueries } from \"@daml/react\";\nimport { Voting } from \"@daml.js/create-daml-app\";\nimport { PublishedWithChanges } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VoteManagement = () => {\n  _s();\n\n  var _assets$contracts$0$p, _assets$contracts$2, _assets$contracts$2$p, _assets$contracts$3, _assets$contracts$3$p, _assets$contracts$4, _assets$contracts$4$p;\n\n  const ledger = useLedger();\n  const assets = useStreamQueries(Voting.Voting);\n  console.log(assets);\n\n  const buttonHandler = async () => {\n    var _assets$contracts$;\n\n    await ledger.archiveByKey(Voting.Voting, (_assets$contracts$ = assets.contracts[0]) === null || _assets$contracts$ === void 0 ? void 0 : _assets$contracts$.signatories[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          borderRadius: \"16px\"\n        },\n        elevation: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(PublishedWithChanges, {\n              sx: {\n                fontSize: 50\n              },\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                display: \"block\",\n                children: \"Vote Management\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"secondary\",\n                display: \"block\",\n                style: {\n                  lineHeight: \"15px\"\n                },\n                children: \"Manage active vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            px: 5,\n            pb: 3,\n            borderRadius: \"16px\"\n          },\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              pt: 2\n            },\n            children: \"Vote Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), (_assets$contracts$0$p = (_assets$contracts$2 = assets.contracts[0]) === null || _assets$contracts$2 === void 0 ? void 0 : (_assets$contracts$2$p = _assets$contracts$2.payload) === null || _assets$contracts$2$p === void 0 ? void 0 : _assets$contracts$2$p.subject) !== null && _assets$contracts$0$p !== void 0 ? _assets$contracts$0$p : \"Loading...\", /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              pt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              pt: 2\n            },\n            children: \"Vote Candidates\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: (_assets$contracts$3 = assets.contracts[0]) === null || _assets$contracts$3 === void 0 ? void 0 : (_assets$contracts$3$p = _assets$contracts$3.payload) === null || _assets$contracts$3$p === void 0 ? void 0 : _assets$contracts$3$p.candidates.map((item, currentItem) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: currentItem + 1 + \". \" + item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              pt: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              pt: 2\n            },\n            children: \"Number of voters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), (_assets$contracts$4 = assets.contracts[0]) === null || _assets$contracts$4 === void 0 ? void 0 : (_assets$contracts$4$p = _assets$contracts$4.payload) === null || _assets$contracts$4$p === void 0 ? void 0 : _assets$contracts$4$p.voters.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: buttonHandler,\n            className: \"button\",\n            name: \"Arcive Vote\",\n            sx: {\n              m: 2,\n              alignItems: \"center\"\n            },\n            children: \"Archive Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VoteManagement, \"yoiHwnz0tE0dWEx1bfJlA4wO7/4=\", false, function () {\n  return [useLedger, useStreamQueries];\n});\n\n_c = VoteManagement;\nexport default VoteManagement;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteManagement\");","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteManagement.tsx"],"names":["React","Paper","Typography","Container","Grid","Divider","Box","Button","List","ListItem","ListItemText","useLedger","useStreamQueries","Voting","PublishedWithChanges","VoteManagement","ledger","assets","console","log","buttonHandler","archiveByKey","contracts","signatories","p","borderRadius","fontSize","lineHeight","px","pb","pt","payload","subject","candidates","map","item","currentItem","voters","length","m","alignItems"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport {\n  Paper,\n  Typography,\n  Container,\n  Grid,\n  Divider,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { useLedger, useStreamQueries } from \"@daml/react\";\n\nimport { Voting } from \"@daml.js/create-daml-app\";\n\nimport { PublishedWithChanges } from \"@mui/icons-material\";\n\nconst VoteManagement: React.FC = () => {\n  const ledger = useLedger();\n\n  const assets = useStreamQueries(Voting.Voting);\n  console.log(assets);\n  const buttonHandler = async () => {\n    await ledger.archiveByKey(\n      Voting.Voting,\n      assets.contracts[0]?.signatories[0]\n    );\n  };\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container spacing={0}>\n            <Grid item>\n              <PublishedWithChanges sx={{ fontSize: 50 }} color=\"primary\" />\n            </Grid>\n\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Management\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  Manage active vote\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Paper sx={{ px: 5, pb: 3, borderRadius: \"16px\" }} variant=\"outlined\">\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Vote Description\n            </Typography>\n            {assets.contracts[0]?.payload?.subject ?? \"Loading...\"}\n            <Divider sx={{ pt: 2 }} />\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Vote Candidates\n            </Typography>\n            <List>\n              {assets.contracts[0]?.payload?.candidates.map(\n                (item, currentItem) => (\n                  <ListItem key={item}>\n                    <ListItemText primary={currentItem + 1 + \". \" + item} />\n                  </ListItem>\n                )\n              )}\n            </List>\n            <Divider sx={{ pt: 2 }} />\n\n            {/* Number of voters */}\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Number of voters\n            </Typography>\n            {assets.contracts[0]?.payload?.voters.length}\n          </Paper>\n          <Box textAlign=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={buttonHandler}\n              className=\"button\"\n              name=\"Arcive Vote\"\n              sx={{ m: 2, alignItems: \"center\" }}\n            >\n              Archive Vote\n            </Button>\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default VoteManagement;\n"]},"metadata":{},"sourceType":"module"}