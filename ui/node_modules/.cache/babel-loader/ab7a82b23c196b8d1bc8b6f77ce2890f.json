{"ast":null,"code":"// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport{encode}from'jwt-simple';export var isLocalDev=process.env.NODE_ENV==='development';export var authConfig=function(){var _process$env$REACT_AP;var ledgerId=(_process$env$REACT_AP=process.env.REACT_APP_LEDGER_ID)!==null&&_process$env$REACT_AP!==void 0?_process$env$REACT_AP:\"create-daml-app-sandbox\";var auth={provider:\"none\",ledgerId:ledgerId,makeToken:function makeToken(party){var payload={\"https://daml.com/ledger-api\":{\"ledgerId\":ledgerId,\"applicationId\":'create-daml-app',\"actAs\":[party]}};return encode(payload,\"secret\",\"HS256\");}};return auth;}();export var httpBaseUrl=undefined;export var wsBaseUrl=isLocalDev?'ws://localhost:7575/':undefined;","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/config.ts"],"names":["encode","isLocalDev","process","env","NODE_ENV","authConfig","ledgerId","REACT_APP_LEDGER_ID","auth","provider","makeToken","party","payload","httpBaseUrl","undefined","wsBaseUrl"],"mappings":"AAAA;AACA;AAEA,OAASA,MAAT,KAAuB,YAAvB,CASA,MAAO,IAAMC,CAAAA,UAAU,CAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA5C,CAGP,MAAO,IAAMC,CAAAA,UAA0B,CAAI,UAAM,2BAC7C,GAAMC,CAAAA,QAAgB,wBAAGJ,OAAO,CAACC,GAAR,CAAYI,mBAAf,+DAAsC,yBAA5D,CACA,GAAMC,CAAAA,IAAc,CAAG,CACrBC,QAAQ,CAAE,MADW,CAErBH,QAAQ,CAAEA,QAFW,CAGrBI,SAAS,CAAE,mBAACC,KAAD,CAAW,CACpB,GAAMC,CAAAA,OAAO,CAAG,CACd,8BAA+B,CAC7B,WAAYN,QADiB,CAE7B,gBAAiB,iBAFY,CAG7B,QAAS,CAACK,KAAD,CAHoB,CADjB,CAAhB,CAOA,MAAOX,CAAAA,MAAM,CAACY,OAAD,CAAU,QAAV,CAAoB,OAApB,CAAb,CACD,CAZoB,CAAvB,CAcA,MAAOJ,CAAAA,IAAP,CACD,CAjBuC,EAAnC,CAoBP,MAAO,IAAMK,CAAAA,WAAW,CAAGC,SAApB,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAGd,UAAU,CAAG,sBAAH,CAA4Ba,SAAxD","sourcesContent":["// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { encode } from 'jwt-simple';\n\nexport type Insecure = {\n  provider: \"none\",\n  makeToken: (party: string) => string,\n  ledgerId: string\n};\n\n\nexport const isLocalDev = process.env.NODE_ENV === 'development';\nexport type Authentication = Insecure;\n\nexport const authConfig: Authentication = (() => {\n    const ledgerId: string = process.env.REACT_APP_LEDGER_ID ?? \"create-daml-app-sandbox\"\n    const auth: Insecure = {\n      provider: \"none\",\n      ledgerId: ledgerId,\n      makeToken: (party) => {\n        const payload = {\n          \"https://daml.com/ledger-api\": {\n            \"ledgerId\": ledgerId,\n            \"applicationId\": 'create-daml-app',\n            \"actAs\": [party]\n          }\n        }\n        return encode(payload, \"secret\", \"HS256\");\n      }\n    };\n    return auth;\n  }\n)();\n\nexport const httpBaseUrl = undefined;\nexport const wsBaseUrl = isLocalDev ? 'ws://localhost:7575/' : undefined;\n"]},"metadata":{},"sourceType":"module"}