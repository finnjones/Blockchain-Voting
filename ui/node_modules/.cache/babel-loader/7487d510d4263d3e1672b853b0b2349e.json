{"ast":null,"code":"import _slicedToArray from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useMemo}from\"react\";import{Divider,Grid,Container,Paper,Typography,Box,LinearProgress}from\"@mui/material\";import{Poll}from\"@mui/icons-material\";import{Voting}from\"@daml.js/create-daml-app\";import{useStreamQueries}from\"@daml/react\";import{Pie,PieChart,Tooltip,Bar,BarChart,Cell,XAxis,LabelList,CartesianGrid,YAxis,Line,LineChart,Label,ResponsiveContainer}from\"recharts\";import moment from\"moment\";import HelpPopup from\"./HelpPopup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VoteAnalytics=function VoteAnalytics(){var _assets$contracts$,_assets$contracts$$pa,_assets$contracts$2,_assets$contracts$2$p,_assets$contracts$3,_assets$contracts$3$p;var assets=useStreamQueries(Voting.Voting);var votes=((_assets$contracts$=assets.contracts[0])===null||_assets$contracts$===void 0?void 0:(_assets$contracts$$pa=_assets$contracts$.payload)===null||_assets$contracts$$pa===void 0?void 0:_assets$contracts$$pa.votes)||[];var voters=((_assets$contracts$2=assets.contracts[0])===null||_assets$contracts$2===void 0?void 0:(_assets$contracts$2$p=_assets$contracts$2.payload)===null||_assets$contracts$2$p===void 0?void 0:_assets$contracts$2$p.voters)||[];var voteTimes=((_assets$contracts$3=assets.contracts[0])===null||_assets$contracts$3===void 0?void 0:(_assets$contracts$3$p=_assets$contracts$3.payload)===null||_assets$contracts$3$p===void 0?void 0:_assets$contracts$3$p.voteTimes)||[];var voteProgress=votes.length/voters.length*100||\"Loading...\";var votesFrequency=useMemo(function(){if(votes.length!==0){var map=new Map();votes.forEach(function(vote){if(map.has(vote)){map.set(vote,(map.get(vote)||1)+1);}else{map.set(vote,1);}});return _toConsumableArray(map).map(function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],value=_ref2[1];return{name:name,value:value};});}else{return[{name:\"No Data\",value:0}];}},[votes]);// generate list of pastel colours based on length of data01\nvar colours=useMemo(function(){var colours=[];for(var i=0;i<votesFrequency.length;i++){colours.push(\"#\".concat(Math.random().toString(16).slice(2,8)));}return colours;},[votesFrequency]);// create a an array of objects with frequency in relationship with time\nvar votesFrequencyByTime=useMemo(function(){if(votes.length!==0){var map=new Map();voteTimes.forEach(function(voteTime){var ajustedTime=voteTime.slice(0,-5)+\"00000\";if(map.has(parseInt(ajustedTime))){map.set(parseInt(ajustedTime),(map.get(parseInt(ajustedTime))||1)+1);}else{map.set(parseInt(ajustedTime),1);}});return _toConsumableArray(map).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),time=_ref4[0],value=_ref4[1];return{time:time,value:value};}).reverse();}else{return[{time:1,value:0}];}},[voteTimes]);return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Box,{sx:{p:1},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,borderRadius:\"16px\"},elevation:2,children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:0,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Poll,{sx:{fontSize:50},color:\"primary\"})}),/*#__PURE__*/_jsxs(Grid,{item:true,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",display:\"block\",children:\"Vote Analytics\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"secondary\",display:\"block\",style:{lineHeight:\"15px\"},children:\"View current vote results\"})})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Typography,{variant:\"h5\",children:[\"Vote Progress: \",voteProgress,\"%\"]}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:voteProgress}),/*#__PURE__*/_jsxs(Grid,{container:true,justifyContent:\"center\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(BarChart,{width:400,height:100,data:votesFrequency,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#8884d8\",children:votesFrequency.map(function(entry,index){return/*#__PURE__*/_jsx(Cell,{fill:colours[index]},\"cell-\".concat(index));})}),/*#__PURE__*/_jsx(Tooltip,{})]})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsxs(PieChart,{width:400,height:400,children:[/*#__PURE__*/_jsxs(Pie,{data:votesFrequency,dataKey:\"value\",nameKey:\"name\"// cx={200}\n// cy={200}\n,children:[votesFrequency.map(function(entry,index){return/*#__PURE__*/_jsx(Cell,{fill:colours[index]},\"cell-\".concat(index));}),/*#__PURE__*/_jsx(LabelList,{dataKey:\"name\",fill:\"white\"})]}),/*#__PURE__*/_jsx(Tooltip,{})]})})]}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",textAlign:\"center\",children:\"Votes Over Time\"}),/*#__PURE__*/_jsx(Box,{style:{width:\"100%\",height:\"20vh\"},textAlign:\"center\",children:/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:\"100%\",children:/*#__PURE__*/_jsxs(LineChart,{width:500,height:300,data:votesFrequencyByTime,margin:{top:5,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"time\",tickFormatter:function tickFormatter(unixTime){return moment(unixTime).format(\"HH:mm Do\");},children:/*#__PURE__*/_jsx(Label,{value:\"Time\",fill:\"#8884d8\",position:\"bottom\"})}),/*#__PURE__*/_jsx(YAxis,{allowDecimals:false,children:/*#__PURE__*/_jsx(Label,{value:\"Votes\",fill:\"#8884d8\",angle:-90})}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Line,{type:\"monotone\",name:\"Votes\",dataKey:\"value\",stroke:\"#8884d8\",activeDot:{r:8}})]})})})]})}),/*#__PURE__*/_jsx(HelpPopup,{heading:\"Vote Analytics Help\",content:\" - This page shows the current vote results and the vote progress. \\\\n - The vote progress is the percentage of votes casted out of the total number of voters. \\\\n - The votes over time chart shows the number of votes that have been cast in relationship to time \\\\n \"})]});};export default VoteAnalytics;","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteAnalytics.tsx"],"names":["React","useMemo","Divider","Grid","Container","Paper","Typography","Box","LinearProgress","Poll","Voting","useStreamQueries","Pie","PieChart","Tooltip","Bar","BarChart","Cell","XAxis","LabelList","CartesianGrid","YAxis","Line","LineChart","Label","ResponsiveContainer","moment","HelpPopup","VoteAnalytics","assets","votes","contracts","payload","voters","voteTimes","voteProgress","length","votesFrequency","map","Map","forEach","vote","has","set","get","name","value","colours","i","push","Math","random","toString","slice","votesFrequencyByTime","voteTime","ajustedTime","parseInt","time","reverse","p","borderRadius","fontSize","lineHeight","entry","index","width","height","top","right","left","bottom","unixTime","format","r"],"mappings":"kVAAA,MAAOA,CAAAA,KAAP,EAAgBC,OAAhB,KAAyC,OAAzC,CACA,OACEC,OADF,CAEEC,IAFF,CAGEC,SAHF,CAIEC,KAJF,CAKEC,UALF,CAMEC,GANF,CAOEC,cAPF,KAQO,eARP,CASA,OAASC,IAAT,KAAqB,qBAArB,CAEA,OAASC,MAAT,KAAuB,0BAAvB,CAEA,OAASC,gBAAT,KAAiC,aAAjC,CAEA,OACEC,GADF,CAEEC,QAFF,CAGEC,OAHF,CAIEC,GAJF,CAKEC,QALF,CAMEC,IANF,CAOEC,KAPF,CAQEC,SARF,CASEC,aATF,CAUEC,KAVF,CAWEC,IAXF,CAYEC,SAZF,CAcEC,KAdF,CAeEC,mBAfF,KAgBO,UAhBP,CAkBA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,C,wFAEA,GAAMC,CAAAA,aAAuB,CAAG,QAA1BA,CAAAA,aAA0B,EAAM,kIACpC,GAAMC,CAAAA,MAAM,CAAGlB,gBAAgB,CAACD,MAAM,CAACA,MAAR,CAA/B,CACA,GAAMoB,CAAAA,KAAK,CAAG,qBAAAD,MAAM,CAACE,SAAP,CAAiB,CAAjB,wFAAqBC,OAArB,sEAA8BF,KAA9B,GAAuC,EAArD,CACA,GAAMG,CAAAA,MAAM,CAAG,sBAAAJ,MAAM,CAACE,SAAP,CAAiB,CAAjB,0FAAqBC,OAArB,sEAA8BC,MAA9B,GAAwC,EAAvD,CACA,GAAMC,CAAAA,SAAS,CAAG,sBAAAL,MAAM,CAACE,SAAP,CAAiB,CAAjB,0FAAqBC,OAArB,sEAA8BE,SAA9B,GAA2C,EAA7D,CACA,GAAMC,CAAAA,YAAY,CAAIL,KAAK,CAACM,MAAN,CAAeH,MAAM,CAACG,MAAvB,CAAiC,GAAjC,EAAwC,YAA7D,CACA,GAAMC,CAAAA,cAAc,CAAGpC,OAAO,CAAC,UAAM,CACnC,GAAI6B,KAAK,CAACM,MAAN,GAAiB,CAArB,CAAwB,CACtB,GAAME,CAAAA,GAAG,CAAG,GAAIC,CAAAA,GAAJ,EAAZ,CACAT,KAAK,CAACU,OAAN,CAAc,SAACC,IAAD,CAAU,CACtB,GAAIH,GAAG,CAACI,GAAJ,CAAQD,IAAR,CAAJ,CAAmB,CACjBH,GAAG,CAACK,GAAJ,CAAQF,IAAR,CAAc,CAACH,GAAG,CAACM,GAAJ,CAAQH,IAAR,GAAiB,CAAlB,EAAuB,CAArC,EACD,CAFD,IAEO,CACLH,GAAG,CAACK,GAAJ,CAAQF,IAAR,CAAc,CAAd,EACD,CACF,CAND,EAOA,MAAO,oBAAIH,GAAJ,EAASA,GAAT,CAAa,gDAAEO,IAAF,UAAQC,KAAR,gBAAoB,CAAED,IAAI,CAAJA,IAAF,CAAQC,KAAK,CAALA,KAAR,CAApB,EAAb,CAAP,CACD,CAVD,IAUO,CACL,MAAO,CACL,CACED,IAAI,CAAE,SADR,CAEEC,KAAK,CAAE,CAFT,CADK,CAAP,CAMD,CACF,CAnB6B,CAmB3B,CAAChB,KAAD,CAnB2B,CAA9B,CAqBA;AACA,GAAMiB,CAAAA,OAAO,CAAG9C,OAAO,CAAC,UAAM,CAC5B,GAAM8C,CAAAA,OAAO,CAAG,EAAhB,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGX,cAAc,CAACD,MAAnC,CAA2CY,CAAC,EAA5C,CAAgD,CAC9CD,OAAO,CAACE,IAAR,YAAiBC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAoC,CAApC,CAAjB,GACD,CACD,MAAON,CAAAA,OAAP,CACD,CANsB,CAMpB,CAACV,cAAD,CANoB,CAAvB,CAQA;AACA,GAAMiB,CAAAA,oBAAoB,CAAGrD,OAAO,CAAC,UAAM,CACzC,GAAI6B,KAAK,CAACM,MAAN,GAAiB,CAArB,CAAwB,CACtB,GAAME,CAAAA,GAAG,CAAG,GAAIC,CAAAA,GAAJ,EAAZ,CACAL,SAAS,CAACM,OAAV,CAAkB,SAACe,QAAD,CAAc,CAC9B,GAAIC,CAAAA,WAAW,CAAGD,QAAQ,CAACF,KAAT,CAAe,CAAf,CAAkB,CAAC,CAAnB,EAAwB,OAA1C,CACA,GAAIf,GAAG,CAACI,GAAJ,CAAQe,QAAQ,CAACD,WAAD,CAAhB,CAAJ,CAAoC,CAClClB,GAAG,CAACK,GAAJ,CACEc,QAAQ,CAACD,WAAD,CADV,CAEE,CAAClB,GAAG,CAACM,GAAJ,CAAQa,QAAQ,CAACD,WAAD,CAAhB,GAAkC,CAAnC,EAAwC,CAF1C,EAID,CALD,IAKO,CACLlB,GAAG,CAACK,GAAJ,CAAQc,QAAQ,CAACD,WAAD,CAAhB,CAA+B,CAA/B,EACD,CACF,CAVD,EAWA,MAAO,oBAAIlB,GAAJ,EAASA,GAAT,CAAa,kDAAEoB,IAAF,UAAQZ,KAAR,gBAAoB,CAAEY,IAAI,CAAJA,IAAF,CAAQZ,KAAK,CAALA,KAAR,CAApB,EAAb,EAAmDa,OAAnD,EAAP,CACD,CAdD,IAcO,CACL,MAAO,CACL,CACED,IAAI,CAAE,CADR,CAEEZ,KAAK,CAAE,CAFT,CADK,CAAP,CAMD,CACF,CAvBmC,CAuBjC,CAACZ,SAAD,CAvBiC,CAApC,CAwBA,mBACE,MAAC,SAAD,yBACE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAE0B,CAAC,CAAE,CAAL,CAAT,uBACE,MAAC,KAAD,EAAO,EAAE,CAAE,CAAEA,CAAC,CAAE,CAAL,CAAQC,YAAY,CAAE,MAAtB,CAAX,CAA2C,SAAS,CAAE,CAAtD,wBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,KAAC,IAAD,EAAM,EAAE,CAAE,CAAEC,QAAQ,CAAE,EAAZ,CAAV,CAA4B,KAAK,CAAC,SAAlC,EADF,EADF,cAIE,MAAC,IAAD,EAAM,IAAI,KAAV,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,OAAO,CAAC,OAAjC,4BADF,EADF,cAME,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,KAAC,UAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,WAFR,CAGE,OAAO,CAAC,OAHV,CAIE,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAJT,uCADF,EANF,GAJF,GADF,cAwBE,KAAC,OAAD,IAxBF,cAyBE,MAAC,UAAD,EAAY,OAAO,CAAC,IAApB,6BAAyC5B,YAAzC,OAzBF,cA0BE,KAAC,cAAD,EAAgB,OAAO,CAAC,aAAxB,CAAsC,KAAK,CAAEA,YAA7C,EA1BF,cA4BE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,cAAc,CAAC,QAA/B,CAAwC,UAAU,CAAC,QAAnD,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,MAAC,QAAD,EAAU,KAAK,CAAE,GAAjB,CAAsB,MAAM,CAAE,GAA9B,CAAmC,IAAI,CAAEE,cAAzC,wBACE,KAAC,KAAD,EAAO,OAAO,CAAC,MAAf,EADF,cAEE,KAAC,GAAD,EAAK,OAAO,CAAC,OAAb,CAAqB,IAAI,CAAC,SAA1B,UACGA,cAAc,CAACC,GAAf,CAAmB,SAAC0B,KAAD,CAAQC,KAAR,qBAClB,KAAC,IAAD,EAA4B,IAAI,CAAElB,OAAO,CAACkB,KAAD,CAAzC,iBAAmBA,KAAnB,EADkB,EAAnB,CADH,EAFF,cAQE,KAAC,OAAD,IARF,GADF,EADF,cAaE,KAAC,IAAD,EAAM,IAAI,KAAV,uBACE,MAAC,QAAD,EAAU,KAAK,CAAE,GAAjB,CAAsB,MAAM,CAAE,GAA9B,wBACE,MAAC,GAAD,EACE,IAAI,CAAE5B,cADR,CAEE,OAAO,CAAC,OAFV,CAGE,OAAO,CAAC,MACR;AACA;AALF,WAOGA,cAAc,CAACC,GAAf,CAAmB,SAAC0B,KAAD,CAAQC,KAAR,qBAClB,KAAC,IAAD,EAA4B,IAAI,CAAElB,OAAO,CAACkB,KAAD,CAAzC,iBAAmBA,KAAnB,EADkB,EAAnB,CAPH,cAWE,KAAC,SAAD,EAAW,OAAO,CAAC,MAAnB,CAA0B,IAAI,CAAC,OAA/B,EAXF,GADF,cAcE,KAAC,OAAD,IAdF,GADF,EAbF,GA5BF,cA4DE,KAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,CAAC,QAAnC,6BA5DF,cA+DE,KAAC,GAAD,EAAK,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,MAAzB,CAAZ,CAA+C,SAAS,CAAC,QAAzD,uBACE,KAAC,mBAAD,EAAqB,KAAK,CAAC,MAA3B,CAAkC,MAAM,CAAC,MAAzC,uBACE,MAAC,SAAD,EACE,KAAK,CAAE,GADT,CAEE,MAAM,CAAE,GAFV,CAGE,IAAI,CAAEb,oBAHR,CAIE,MAAM,CAAE,CACNc,GAAG,CAAE,CADC,CAENC,KAAK,CAAE,EAFD,CAGNC,IAAI,CAAE,EAHA,CAINC,MAAM,CAAE,EAJF,CAJV,wBAWE,KAAC,aAAD,EAAe,eAAe,CAAC,KAA/B,EAXF,cAYE,KAAC,KAAD,EACE,OAAO,CAAC,MADV,CAEE,aAAa,CAAE,uBAACC,QAAD,QACb9C,CAAAA,MAAM,CAAC8C,QAAD,CAAN,CAAiBC,MAAjB,CAAwB,UAAxB,CADa,EAFjB,uBAME,KAAC,KAAD,EAAO,KAAK,CAAC,MAAb,CAAoB,IAAI,CAAC,SAAzB,CAAmC,QAAQ,CAAC,QAA5C,EANF,EAZF,cAoBE,KAAC,KAAD,EAAO,aAAa,CAAE,KAAtB,uBACE,KAAC,KAAD,EAAO,KAAK,CAAC,OAAb,CAAqB,IAAI,CAAC,SAA1B,CAAoC,KAAK,CAAE,CAAC,EAA5C,EADF,EApBF,cAuBE,KAAC,OAAD,IAvBF,cAwBE,KAAC,IAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,OAFP,CAGE,OAAO,CAAC,OAHV,CAIE,MAAM,CAAC,SAJT,CAKE,SAAS,CAAE,CAAEC,CAAC,CAAE,CAAL,CALb,EAxBF,GADF,EADF,EA/DF,GADF,EADF,cAwGE,KAAC,SAAD,EACE,OAAO,CAAC,qBADV,CAEE,OAAO,CAAC,4QAFV,EAxGF,GADF,CAmHD,CAhLD,CAkLA,cAAe9C,CAAAA,aAAf","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport {\n  Divider,\n  Grid,\n  Container,\n  Paper,\n  Typography,\n  Box,\n  LinearProgress,\n} from \"@mui/material\";\nimport { Poll } from \"@mui/icons-material\";\n\nimport { Voting } from \"@daml.js/create-daml-app\";\n\nimport { useStreamQueries } from \"@daml/react\";\n\nimport {\n  Pie,\n  PieChart,\n  Tooltip,\n  Bar,\n  BarChart,\n  Cell,\n  XAxis,\n  LabelList,\n  CartesianGrid,\n  YAxis,\n  Line,\n  LineChart,\n  Legend,\n  Label,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport moment from \"moment\";\nimport HelpPopup from \"./HelpPopup\";\n\nconst VoteAnalytics: React.FC = () => {\n  const assets = useStreamQueries(Voting.Voting);\n  const votes = assets.contracts[0]?.payload?.votes || [];\n  const voters = assets.contracts[0]?.payload?.voters || [];\n  const voteTimes = assets.contracts[0]?.payload?.voteTimes || [];\n  const voteProgress = (votes.length / voters.length) * 100 || \"Loading...\";\n  const votesFrequency = useMemo(() => {\n    if (votes.length !== 0) {\n      const map = new Map<string, number>();\n      votes.forEach((vote) => {\n        if (map.has(vote)) {\n          map.set(vote, (map.get(vote) || 1) + 1);\n        } else {\n          map.set(vote, 1);\n        }\n      });\n      return [...map].map(([name, value]) => ({ name, value }));\n    } else {\n      return [\n        {\n          name: \"No Data\",\n          value: 0,\n        },\n      ];\n    }\n  }, [votes]);\n\n  // generate list of pastel colours based on length of data01\n  const colours = useMemo(() => {\n    const colours = [];\n    for (let i = 0; i < votesFrequency.length; i++) {\n      colours.push(`#${Math.random().toString(16).slice(2, 8)}`);\n    }\n    return colours;\n  }, [votesFrequency]);\n\n  // create a an array of objects with frequency in relationship with time\n  const votesFrequencyByTime = useMemo(() => {\n    if (votes.length !== 0) {\n      const map = new Map<number, number>();\n      voteTimes.forEach((voteTime) => {\n        var ajustedTime = voteTime.slice(0, -5) + \"00000\";\n        if (map.has(parseInt(ajustedTime))) {\n          map.set(\n            parseInt(ajustedTime),\n            (map.get(parseInt(ajustedTime)) || 1) + 1\n          );\n        } else {\n          map.set(parseInt(ajustedTime), 1);\n        }\n      });\n      return [...map].map(([time, value]) => ({ time, value })).reverse();\n    } else {\n      return [\n        {\n          time: 1,\n          value: 0,\n        },\n      ];\n    }\n  }, [voteTimes]);\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container spacing={0}>\n            <Grid item>\n              <Poll sx={{ fontSize: 50 }} color=\"primary\" />\n            </Grid>\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Analytics\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  View current vote results\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Divider />\n          <Typography variant=\"h5\">Vote Progress: {voteProgress}%</Typography>\n          <LinearProgress variant=\"determinate\" value={voteProgress} />\n\n          <Grid container justifyContent=\"center\" alignItems=\"center\">\n            <Grid item>\n              <BarChart width={400} height={100} data={votesFrequency}>\n                <XAxis dataKey=\"name\" />\n                <Bar dataKey=\"value\" fill=\"#8884d8\">\n                  {votesFrequency.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colours[index]} />\n                  ))}\n                </Bar>\n\n                <Tooltip />\n              </BarChart>\n            </Grid>\n            <Grid item>\n              <PieChart width={400} height={400}>\n                <Pie\n                  data={votesFrequency}\n                  dataKey=\"value\"\n                  nameKey=\"name\"\n                  // cx={200}\n                  // cy={200}\n                >\n                  {votesFrequency.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colours[index]} />\n                  ))}\n\n                  <LabelList dataKey=\"name\" fill=\"white\" />\n                </Pie>\n                <Tooltip />\n              </PieChart>\n            </Grid>\n          </Grid>\n          <Typography variant=\"h5\" textAlign=\"center\">\n            Votes Over Time\n          </Typography>\n          <Box style={{ width: \"100%\", height: \"20vh\" }} textAlign=\"center\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                width={500}\n                height={300}\n                data={votesFrequencyByTime}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"time\"\n                  tickFormatter={(unixTime) =>\n                    moment(unixTime).format(\"HH:mm Do\")\n                  }\n                >\n                  <Label value=\"Time\" fill=\"#8884d8\" position=\"bottom\" />\n                </XAxis>\n                <YAxis allowDecimals={false}>\n                  <Label value=\"Votes\" fill=\"#8884d8\" angle={-90} />\n                </YAxis>\n                <Tooltip />\n                <Line\n                  type=\"monotone\"\n                  name=\"Votes\"\n                  dataKey=\"value\"\n                  stroke=\"#8884d8\"\n                  activeDot={{ r: 8 }}\n                />\n                {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\n              </LineChart>\n            </ResponsiveContainer>\n          </Box>\n        </Paper>\n      </Box>\n      <HelpPopup\n        heading=\"Vote Analytics Help\"\n        content=\"\n          - This page shows the current vote results and the vote progress. \\n\n          - The vote progress is the percentage of votes casted out of the total number of voters. \\n\n          - The votes over time chart shows the number of votes that have been cast in relationship to time \\n\n        \"\n      ></HelpPopup>\n    </Container>\n  );\n};\n\nexport default VoteAnalytics;\n"]},"metadata":{},"sourceType":"module"}