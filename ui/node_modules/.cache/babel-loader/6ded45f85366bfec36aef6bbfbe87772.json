{"ast":null,"code":"var _jsxFileName = \"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Grid, List, ListItem, Container, FormLabel, FormControlLabel, RadioGroup, FormControl, Typography, Radio, Divider, Box, Snackbar, IconButton, Paper } from \"@mui/material\";\nimport { Close, HowToVote, Logout } from \"@mui/icons-material\";\nimport { Voting } from \"@daml.js/create-daml-app\";\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VoteScreen = _ref => {\n  _s();\n\n  var _assets$contracts$0$p, _assets$contracts$3, _assets$contracts$3$p, _assets$contracts$4, _assets$contracts$4$p;\n\n  let {\n    onLogout\n  } = _ref;\n  const hashUsername = useParty();\n  const ledger = useLedger();\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setPopup(false);\n  };\n\n  const action = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  let userContract = ledger.fetchByKey(Voting.Voting, hashUsername);\n  console.log(userContract);\n  const assets = useStreamQueries(Voting.Voting);\n  console.log(assets);\n  const [radioStatus, setRadioStatus] = useState(\"\"); // get current unix time stamp\n\n  const now = new Date().getTime(); // console.log(now);\n\n  const buttonHandler = async () => {\n    var _assets$contracts$;\n\n    if ((_assets$contracts$ = assets.contracts[0]) !== null && _assets$contracts$ !== void 0 && _assets$contracts$.payload.voted.includes(hashUsername)) {\n      setPopupText(\"You have already voted\");\n      setPopup(true);\n    } else {\n      var _assets$contracts$2;\n\n      await ledger.exerciseByKey(Voting.Voting.Vote, (_assets$contracts$2 = assets.contracts[0]) === null || _assets$contracts$2 === void 0 ? void 0 : _assets$contracts$2.signatories[0], {\n        voter: hashUsername,\n        vote: radioStatus,\n        unixTime: now\n      }).catch(console.error);\n      setPopupText(\"Your vote has been cast. Please or close the browser tab\");\n      setPopup(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      textAlign: \"right\",\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        startIcon: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 22\n        }, this),\n        onClick: onLogout,\n        component: Link,\n        to: \"/\",\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        style: {\n          height: \"75vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 3,\n            borderRadius: \"16px\",\n            width: \"90%\"\n          },\n          elevation: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 0,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(HowToVote, {\n                sx: {\n                  fontSize: 50\n                },\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  display: \"block\",\n                  children: \"Vote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  color: \"secondary\",\n                  display: \"block\",\n                  style: {\n                    lineHeight: \"15px\"\n                  },\n                  children: \"Read the vote description carefully and choose an option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              pt: 2\n            },\n            children: \"Vote Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), (_assets$contracts$0$p = (_assets$contracts$3 = assets.contracts[0]) === null || _assets$contracts$3 === void 0 ? void 0 : (_assets$contracts$3$p = _assets$contracts$3.payload) === null || _assets$contracts$3$p === void 0 ? void 0 : _assets$contracts$3$p.subject) !== null && _assets$contracts$0$p !== void 0 ? _assets$contracts$0$p : \"Loading...\", /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              pb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                id: \"demo-radio-buttons-group-label\",\n                children: \"Options\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n                defaultValue: \"female\",\n                name: \"radio-buttons-group\",\n                children: /*#__PURE__*/_jsxDEV(List, {\n                  children: (_assets$contracts$4 = assets.contracts[0]) === null || _assets$contracts$4 === void 0 ? void 0 : (_assets$contracts$4$p = _assets$contracts$4.payload) === null || _assets$contracts$4$p === void 0 ? void 0 : _assets$contracts$4$p.candidates.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n                    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: item,\n                      control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 36\n                      }, this),\n                      label: item,\n                      onChange: event => {\n                        setRadioStatus(item);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 25\n                    }, this)\n                  }, item, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: buttonHandler,\n              className: \"button\",\n              name: \"Create Vote\",\n              sx: {\n                m: 2,\n                alignItems: \"center\"\n              },\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n            open: Popup,\n            autoHideDuration: 4000,\n            onClose: handleClose,\n            message: popupText,\n            action: action\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VoteScreen, \"f+OGd0xYD3VwBx2eh1/1QC3Hsws=\", false, function () {\n  return [useParty, useLedger, useStreamQueries];\n});\n\n_c = VoteScreen;\nexport default VoteScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteScreen\");","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteScreen.tsx"],"names":["React","useState","Button","Grid","List","ListItem","Container","FormLabel","FormControlLabel","RadioGroup","FormControl","Typography","Radio","Divider","Box","Snackbar","IconButton","Paper","Close","HowToVote","Logout","Voting","useParty","useLedger","useStreamQueries","Link","VoteScreen","onLogout","hashUsername","ledger","Popup","setPopup","popupText","setPopupText","handleClose","event","reason","action","userContract","fetchByKey","console","log","assets","radioStatus","setRadioStatus","now","Date","getTime","buttonHandler","contracts","payload","voted","includes","exerciseByKey","Vote","signatories","voter","vote","unixTime","catch","error","p","height","borderRadius","width","fontSize","lineHeight","pt","subject","pb","candidates","map","item","m","alignItems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,gBAPF,EAQEC,UARF,EASEC,WATF,EAUEC,UAVF,EAWEC,KAXF,EAYEC,OAZF,EAaEC,GAbF,EAcEC,QAdF,EAeEC,UAfF,EAgBEC,KAhBF,QAiBO,eAjBP;AAkBA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,qBAAzC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,gBAA9B,QAAsD,aAAtD;AACA,SAAsBC,IAAtB,QAAkC,kBAAlC;;;;AAMA,MAAMC,UAA2B,GAAG,QAAkB;AAAA;;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACpD,QAAMC,YAAY,GAAGN,QAAQ,EAA7B;AACA,QAAMO,MAAM,GAAGN,SAAS,EAAxB;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoB/B,KAAK,CAACC,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BjC,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;;AAEA,QAAMiC,WAAW,GAAG,CAClBC,KADkB,EAElBC,MAFkB,KAGf;AACH,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDL,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GARD;;AASA,QAAMM,MAAM,gBACV,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,oBAAW,OAFb;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAEH,WAJX;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,MAAII,YAAY,GAAGT,MAAM,CAACU,UAAP,CAAkBlB,MAAM,CAACA,MAAzB,EAAiCO,YAAjC,CAAnB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACA,QAAMI,MAAM,GAAGlB,gBAAgB,CAACH,MAAM,CAACA,MAAR,CAA/B;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC3C,QAAQ,CAAC,EAAD,CAA9C,CAhCoD,CAiCpD;;AACA,QAAM4C,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ,CAlCoD,CAoCpD;;AACA,QAAMC,aAAa,GAAG,YAAY;AAAA;;AAChC,8BAAIN,MAAM,CAACO,SAAP,CAAiB,CAAjB,CAAJ,+CAAI,mBAAqBC,OAArB,CAA6BC,KAA7B,CAAmCC,QAAnC,CAA4CxB,YAA5C,CAAJ,EAA+D;AAC7DK,MAAAA,YAAY,CAAC,wBAAD,CAAZ;AAEAF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAJD,MAIO;AAAA;;AACL,YAAMF,MAAM,CACTwB,aADG,CAEFhC,MAAM,CAACA,MAAP,CAAciC,IAFZ,yBAGFZ,MAAM,CAACO,SAAP,CAAiB,CAAjB,CAHE,wDAGF,oBAAqBM,WAArB,CAAiC,CAAjC,CAHE,EAIF;AAAEC,QAAAA,KAAK,EAAE5B,YAAT;AAAuB6B,QAAAA,IAAI,EAAEd,WAA7B;AAA0Ce,QAAAA,QAAQ,EAAEb;AAApD,OAJE,EAMHc,KANG,CAMGnB,OAAO,CAACoB,KANX,CAAN;AAOA3B,MAAAA,YAAY,CAAC,0DAAD,CAAZ;AAEAF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAjBD;;AAmBA,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAE,OAAhB;AAAyB,MAAA,EAAE,EAAE;AAAE8B,QAAAA,CAAC,EAAE;AAAL,OAA7B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,UADV;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAHb;AAIE,QAAA,OAAO,EAAElC,QAJX;AAKE,QAAA,SAAS,EAAEF,IALb;AAME,QAAA,EAAE,EAAC,GANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,SAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,cAAc,EAAC,QAHjB;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,KAAK,EAAE;AAAEqC,UAAAA,MAAM,EAAE;AAAV,SALT;AAAA,+BAOE,QAAC,KAAD;AACE,UAAA,EAAE,EAAE;AAAED,YAAAA,CAAC,EAAE,CAAL;AAAQE,YAAAA,YAAY,EAAE,MAAtB;AAA8BC,YAAAA,KAAK,EAAE;AAArC,WADN;AAEE,UAAA,SAAS,EAAE,CAFb;AAAA,kCAIE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,EAAE,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBAAf;AAAiC,gBAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAKE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,IAApB;AAAyB,kBAAA,OAAO,EAAC,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA,uCACE,QAAC,UAAD;AACE,kBAAA,OAAO,EAAC,WADV;AAEE,kBAAA,KAAK,EAAC,WAFR;AAGE,kBAAA,OAAO,EAAC,OAHV;AAIE,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,UAAU,EAAE;AAAd,mBAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eA4BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBA5BF,eA8BE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,EAAE,EAAE;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9BF,kDAiCGzB,MAAM,CAACO,SAAP,CAAiB,CAAjB,CAjCH,iFAiCG,oBAAqBC,OAjCxB,0DAiCG,sBAA8BkB,OAjCjC,yEAiC4C,YAjC5C,eAmCE,QAAC,OAAD;AAAS,YAAA,EAAE,EAAE;AAAEC,cAAAA,EAAE,EAAE;AAAN;AAAb;AAAA;AAAA;AAAA;AAAA,kBAnCF,eAoCE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE,QAAC,WAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,EAAE,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,UAAD;AACE,mCAAgB,gCADlB;AAEE,gBAAA,YAAY,EAAC,QAFf;AAGE,gBAAA,IAAI,EAAC,qBAHP;AAAA,uCAKE,QAAC,IAAD;AAAA,mDACG3B,MAAM,CAACO,SAAP,CAAiB,CAAjB,CADH,iFACG,oBAAqBC,OADxB,0DACG,sBAA8BoB,UAA9B,CAAyCC,GAAzC,CAA8CC,IAAD,iBAC5C,QAAC,QAAD;AAAA,2CACE,QAAC,gBAAD;AACE,sBAAA,KAAK,EAAEA,IADT;AAEE,sBAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,8BAFX;AAGE,sBAAA,KAAK,EAAEA,IAHT;AAIE,sBAAA,QAAQ,EAAGrC,KAAD,IAAW;AACnBS,wBAAAA,cAAc,CAAC4B,IAAD,CAAd;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF,qBAAeA,IAAf;AAAA;AAAA;AAAA;AAAA,0BADD;AADH;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBApCF,eA+DE,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,OAAO,EAAC,WADV;AAEE,cAAA,OAAO,EAAExB,aAFX;AAGE,cAAA,SAAS,EAAC,QAHZ;AAIE,cAAA,IAAI,EAAC,aAJP;AAKE,cAAA,EAAE,EAAE;AAAEyB,gBAAAA,CAAC,EAAE,CAAL;AAAQC,gBAAAA,UAAU,EAAE;AAApB,eALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA/DF,eA0EE,QAAC,QAAD;AACE,YAAA,IAAI,EAAE5C,KADR;AAEE,YAAA,gBAAgB,EAAE,IAFpB;AAGE,YAAA,OAAO,EAAEI,WAHX;AAIE,YAAA,OAAO,EAAEF,SAJX;AAKE,YAAA,MAAM,EAAEK;AALV;AAAA;AAAA;AAAA;AAAA,kBA1EF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA,kBADF;AA4GD,CApKD;;GAAMX,U;UACiBJ,Q,EACNC,S,EA4BAC,gB;;;KA9BXE,U;AAsKN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  List,\n  ListItem,\n  Container,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  FormControl,\n  Typography,\n  Radio,\n  Divider,\n  Box,\n  Snackbar,\n  IconButton,\n  Paper,\n} from \"@mui/material\";\nimport { Close, HowToVote, Logout } from \"@mui/icons-material\";\nimport { Voting } from \"@daml.js/create-daml-app\";\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\ntype Props = {\n  onLogout: () => void;\n};\n\nconst VoteScreen: React.FC<Props> = ({ onLogout }) => {\n  const hashUsername = useParty();\n  const ledger = useLedger();\n\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n\n  const handleClose = (\n    event: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setPopup(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <Close fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n  let userContract = ledger.fetchByKey(Voting.Voting, hashUsername);\n  console.log(userContract);\n  const assets = useStreamQueries(Voting.Voting);\n  console.log(assets);\n  const [radioStatus, setRadioStatus] = useState(\"\");\n  // get current unix time stamp\n  const now = new Date().getTime();\n\n  // console.log(now);\n  const buttonHandler = async () => {\n    if (assets.contracts[0]?.payload.voted.includes(hashUsername)) {\n      setPopupText(\"You have already voted\");\n\n      setPopup(true);\n    } else {\n      await ledger\n        .exerciseByKey(\n          Voting.Voting.Vote,\n          assets.contracts[0]?.signatories[0],\n          { voter: hashUsername, vote: radioStatus, unixTime: now }\n        )\n        .catch(console.error);\n      setPopupText(\"Your vote has been cast. Please or close the browser tab\");\n\n      setPopup(true);\n    }\n  };\n\n  return (\n    <>\n      <Box textAlign={\"right\"} sx={{ p: 1 }}>\n        <Button\n          variant=\"outlined\"\n          color=\"inherit\"\n          startIcon={<Logout />}\n          onClick={onLogout}\n          component={Link}\n          to=\"/\"\n        >\n          Log Out\n        </Button>\n      </Box>\n      <Container>\n        <Grid\n          container\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          style={{ height: \"75vh\" }}\n        >\n          <Paper\n            sx={{ p: 3, borderRadius: \"16px\", width: \"90%\" }}\n            elevation={2}\n          >\n            <Grid container spacing={0}>\n              <Grid item>\n                <HowToVote sx={{ fontSize: 50 }} color=\"primary\" />\n              </Grid>\n\n              <Grid item>\n                <Grid item>\n                  <Typography variant=\"h5\" display=\"block\">\n                    Vote\n                  </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"secondary\"\n                    display=\"block\"\n                    style={{ lineHeight: \"15px\" }}\n                  >\n                    Read the vote description carefully and choose an option\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n\n            <Divider />\n\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Vote Description\n            </Typography>\n            {assets.contracts[0]?.payload?.subject ?? \"Loading...\"}\n\n            <Divider sx={{ pb: 2 }} />\n            <Box textAlign=\"center\">\n              <FormControl>\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Options\n                </FormLabel>\n                <RadioGroup\n                  aria-labelledby=\"demo-radio-buttons-group-label\"\n                  defaultValue=\"female\"\n                  name=\"radio-buttons-group\"\n                >\n                  <List>\n                    {assets.contracts[0]?.payload?.candidates.map((item) => (\n                      <ListItem key={item}>\n                        <FormControlLabel\n                          value={item}\n                          control={<Radio />}\n                          label={item}\n                          onChange={(event) => {\n                            setRadioStatus(item);\n                          }}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </RadioGroup>\n              </FormControl>\n            </Box>\n            <Box textAlign=\"center\">\n              <Button\n                variant=\"contained\"\n                onClick={buttonHandler}\n                className=\"button\"\n                name=\"Create Vote\"\n                sx={{ m: 2, alignItems: \"center\" }}\n              >\n                Vote\n              </Button>\n            </Box>\n            <Snackbar\n              open={Popup}\n              autoHideDuration={4000}\n              onClose={handleClose}\n              message={popupText}\n              action={action}\n            />\n          </Paper>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default VoteScreen;\n"]},"metadata":{},"sourceType":"module"}