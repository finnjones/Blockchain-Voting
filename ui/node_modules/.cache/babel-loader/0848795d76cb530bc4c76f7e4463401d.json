{"ast":null,"code":"import _slicedToArray from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from\"react\";import{LoginScreenVote,LoginScreenCreateVote,LandingScreen}from\"./LoginScreen\";import{LogoutConfirm,PageNotFound}from\"./CatchNotFound\";import MainScreen from\"./MainScreen\";import VoteManagement from\"./VoteManagement\";import VoteScreen from\"./VoteScreen\";import DamlLedger from\"@daml/react\";import{httpBaseUrl}from\"../config\";import{Route,Routes}from\"react-router-dom\";import CssBaseline from\"@mui/material/CssBaseline\";import VoteAnalytics from\"./VoteAnalytics\";import MainView from\"./MainView\";import{createTheme,ThemeProvider,useMediaQuery}from\"@mui/material\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function themeSwitcher(){}var App=function App(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),credentials=_React$useState2[0],setCredentials=_React$useState2[1];// create a dark theme light theme switcher\nvar preferedScheme=useMediaQuery(\"(prefers-color-scheme: dark)\");var theme=React.useMemo(function(){return createTheme({palette:{mode:preferedScheme?\"dark\":\"light\",primary:{main:\"#387DF6\"},secondary:{main:\"#666666\"}},typography:{fontFamily:\"Roboto, sans-serif\",subtitle1:{fontSize:16},h5:{fontWeight:700,fontSize:24},h6:{fontWeight:500}}});},[preferedScheme]);// app.use((req: any, res: any, next: any) => {\n//   res.header(\"Access-Control-Allow-Origin\", \"*\");\n//   next();\n// });\nreturn credentials?/*#__PURE__*/_jsx(DamlLedger,{token:credentials.token,party:credentials.party,httpBaseUrl:httpBaseUrl,children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/Vote\",element:/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(VoteScreen,{onLogout:function onLogout(){return setCredentials(undefined);}})})}),/*#__PURE__*/_jsx(Route,{path:\"/CreateVote\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MainScreen,{onLogout:function onLogout(){return setCredentials(undefined);}}),/*#__PURE__*/_jsx(MainView,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/VoteAnalytics\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MainScreen,{onLogout:function onLogout(){return setCredentials(undefined);}}),/*#__PURE__*/_jsx(VoteAnalytics,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"/VoteManagement\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MainScreen,{onLogout:function onLogout(){return setCredentials(undefined);}}),/*#__PURE__*/_jsx(VoteManagement,{})]})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(LogoutConfirm,{onLogout:function onLogout(){return setCredentials(undefined);}})})]})})]})}):/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LandingScreen,{onLogin:setCredentials})}),/*#__PURE__*/_jsx(Route,{path:\"/VoteLogin\",element:/*#__PURE__*/_jsx(LoginScreenVote,{onLogin:setCredentials})}),/*#__PURE__*/_jsx(Route,{path:\"/CreateVoteLogin\",element:/*#__PURE__*/_jsx(LoginScreenCreateVote,{onLogin:setCredentials})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(PageNotFound,{})})]})})]})//\n;};// APP_END\nexport default App;","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/App.tsx"],"names":["React","LoginScreenVote","LoginScreenCreateVote","LandingScreen","LogoutConfirm","PageNotFound","MainScreen","VoteManagement","VoteScreen","DamlLedger","httpBaseUrl","Route","Routes","CssBaseline","VoteAnalytics","MainView","createTheme","ThemeProvider","useMediaQuery","themeSwitcher","App","useState","credentials","setCredentials","preferedScheme","theme","useMemo","palette","mode","primary","main","secondary","typography","fontFamily","subtitle1","fontSize","h5","fontWeight","h6","token","party","undefined"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from \"react\";\nimport {\n  LoginScreenVote,\n  LoginScreenCreateVote,\n  LandingScreen,\n} from \"./LoginScreen\";\nimport { LogoutConfirm, PageNotFound } from \"./CatchNotFound\";\nimport MainScreen from \"./MainScreen\";\nimport VoteManagement from \"./VoteManagement\";\nimport VoteScreen from \"./VoteScreen\";\nimport DamlLedger from \"@daml/react\";\nimport Credentials from \"../Credentials\";\nimport { httpBaseUrl } from \"../config\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport VoteAnalytics from \"./VoteAnalytics\";\nimport MainView from \"./MainView\";\nimport { createTheme, ThemeProvider, useMediaQuery } from \"@mui/material\";\n\nexport function themeSwitcher() {}\n\nconst App: React.FC = () => {\n  const [credentials, setCredentials] = React.useState<\n    Credentials | undefined\n  >();\n  // create a dark theme light theme switcher\n  const preferedScheme = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: preferedScheme ? \"dark\" : \"light\",\n          primary: {\n            main: \"#387DF6\",\n          },\n          secondary: {\n            main: \"#666666\",\n          },\n        },\n\n        typography: {\n          fontFamily: \"Roboto, sans-serif\",\n          subtitle1: {\n            fontSize: 16,\n          },\n          h5: {\n            fontWeight: 700,\n            fontSize: 24,\n          },\n          h6: {\n            fontWeight: 500,\n          },\n        },\n      }),\n    [preferedScheme]\n  );\n  // app.use((req: any, res: any, next: any) => {\n  //   res.header(\"Access-Control-Allow-Origin\", \"*\");\n  //   next();\n  // });\n\n  return credentials ? (\n    <DamlLedger\n      token={credentials.token}\n      party={credentials.party}\n      httpBaseUrl={httpBaseUrl}\n    >\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <div>\n          {/* <MainScreen onLogout={() => setCredentials(undefined)} /> */}\n\n          <Routes>\n            {/* <Route path=\"/\" component={Home} /> */}\n            <Route\n              path=\"/Vote\"\n              element={\n                <>\n                  <VoteScreen onLogout={() => setCredentials(undefined)} />\n                </>\n              }\n            ></Route>\n            <Route\n              path=\"/CreateVote\"\n              element={\n                <>\n                  <MainScreen onLogout={() => setCredentials(undefined)} />\n                  <MainView />\n                </>\n              }\n            ></Route>\n            <Route\n              path=\"/VoteAnalytics\"\n              element={\n                <>\n                  <MainScreen onLogout={() => setCredentials(undefined)} />\n                  <VoteAnalytics />\n                </>\n              }\n            ></Route>\n            <Route\n              path=\"/VoteManagement\"\n              element={\n                <>\n                  <MainScreen onLogout={() => setCredentials(undefined)} />\n                  <VoteManagement />\n                </>\n              }\n            ></Route>\n\n            <Route\n              path=\"*\"\n              element={\n                <LogoutConfirm onLogout={() => setCredentials(undefined)} />\n              }\n            ></Route>\n          </Routes>\n        </div>\n      </ThemeProvider>\n    </DamlLedger>\n  ) : (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div>\n        <Routes>\n          {/* <Route path=\"/\" component={Home} /> */}\n\n          <Route\n            path=\"/\"\n            element={<LandingScreen onLogin={setCredentials} />}\n          ></Route>\n          <Route\n            path=\"/VoteLogin\"\n            element={<LoginScreenVote onLogin={setCredentials} />}\n          ></Route>\n          <Route\n            path=\"/CreateVoteLogin\"\n            element={<LoginScreenCreateVote onLogin={setCredentials} />}\n          ></Route>\n          <Route path=\"*\" element={<PageNotFound />}></Route>\n        </Routes>\n      </div>\n    </ThemeProvider>\n\n    //\n  );\n};\n// APP_END\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}