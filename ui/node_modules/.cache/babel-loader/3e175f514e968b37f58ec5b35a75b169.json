{"ast":null,"code":"var _jsxFileName = \"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/MainView.tsx\",\n    _s = $RefreshSig$();\n\n// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState } from \"react\";\nimport { Button, Container, Slider, List, ListItem, ListItemText, TextField, Typography, Box, Snackbar, Grid, Divider, IconButton, Paper } from \"@mui/material\";\nimport { Key, Ballot, Delete, Close, KeyboardReturn } from \"@mui/icons-material\";\nimport { Voting } from \"@daml.js/create-daml-app\";\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\nimport { createHash } from \"crypto\";\nimport HelpPopup from \"./HelpPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet voteKeys = [];\nlet hashedVoteKeys = [];\n\nconst MainView = () => {\n  _s();\n\n  const hashUsername = useParty();\n  const [candidateList, setCandidateList] = useState([]);\n  const [value, setValue] = React.useState(10);\n  const [subjectText, setSubjectText] = useState(\"\");\n  const [candidateText, setCandidateText] = useState(\"\");\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n  const assets = useStreamQueries(Voting.Voting);\n  let voteKeys = localStorage.getItem(\"voteKeys\") || \"\";\n  voteKeys = JSON.parse(voteKeys); // console.log(saved);\n  // const initialValue = JSON.parse(saved);\n  // console.log(initialValue);\n\n  const ledger = useLedger();\n\n  const buttonHandler = async event => {\n    event.preventDefault();\n\n    if (assets.contracts.length === 0) {\n      const [voteKeys, hashedVoteKeys] = generateVoteKeys(value);\n      localStorage.setItem(\"voteKeys\", JSON.stringify(voteKeys));\n      const voteDetails = {\n        username: hashUsername,\n        voters: hashedVoteKeys,\n        votes: [],\n        voted: [],\n        voteTimes: [],\n        candidates: candidateList,\n        subject: subjectText\n      };\n      ledger.create(Voting.Voting, voteDetails);\n      setPopupText(\"Vote Created\");\n      setPopup(true);\n    } else {\n      setPopupText(\"Vote In Progress\");\n      setPopup(true);\n    }\n  };\n\n  function hash(input) {\n    return createHash(\"sha256\").update(input).digest(\"hex\");\n  }\n\n  const generateVoteKeys = voterCount => {\n    for (let i = 0; i < voterCount; i++) {\n      var crypto = require(\"crypto\");\n\n      var key = crypto.randomBytes(20).toString(\"hex\");\n      voteKeys.push(`${key}`);\n      hashedVoteKeys.push(hash(key));\n    }\n\n    return [voteKeys, hashedVoteKeys];\n  };\n\n  const addCandidate = () => {\n    if (candidateList.includes(candidateText)) {\n      setPopupText(\"Candidate already exists\");\n      setPopup(true);\n    } else {\n      setCandidateText(\"\"); // append candidateText to the start of candidateList\n\n      setCandidateList([candidateText, ...candidateList]);\n    }\n  }; // copy voteKeys to clipboard\n\n\n  const copyVoteKeys = () => {\n    navigator.clipboard.writeText(voteKeys.join(\"\\n\"));\n    setPopupText(\"Keys Copied To Clipboard\");\n    setPopup(true);\n  }; // export voteKeys to csv\n\n\n  const exportVoteKeys = () => {\n    const csv = voteKeys.join(\"\\n\");\n    const blob = new Blob([csv], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"voteKeys.csv\";\n    link.click();\n    setPopupText(\"Keys Exported\");\n    setPopup(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setPopup(false);\n  };\n\n  const action = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          borderRadius: \"16px\"\n        },\n        elevation: 2,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            flexWrap: \"wrap\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Ballot, {\n            sx: {\n              fontSize: 45\n            },\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Create A Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            p: 0\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            pt: 2\n          },\n          children: \"What is the vote on?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Subject\",\n            variant: \"outlined\",\n            value: subjectText,\n            onChange: event => {\n              setSubjectText(event.target.value);\n            },\n            style: {\n              width: \"94%\"\n            },\n            sx: {\n              m: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Voters: \", value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            value: value,\n            \"aria-label\": \"Default\",\n            valueLabelDisplay: \"auto\",\n            name: \"slider\",\n            sx: {\n              m: 2\n            },\n            style: {\n              width: \"95%\"\n            },\n            onChange: event => {\n              setValue(event.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Candidates: \", candidateList.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Candidate\",\n            variant: \"outlined\",\n            value: candidateText,\n            onChange: event => {\n              setCandidateText(event.target.value);\n            },\n            onKeyPress: event => {\n              if (event.key === \"Enter\") {\n                event.preventDefault();\n                addCandidate();\n              }\n            },\n            style: {\n              width: \"95%\"\n            },\n            sx: {\n              m: 2\n            },\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: addCandidate,\n                children: /*#__PURE__*/_jsxDEV(KeyboardReturn, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            style: {\n              width: \"95%\"\n            },\n            sx: {\n              ml: 2\n            },\n            children: candidateList.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n              secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                onClick: e => {\n                  setCandidateList(candidateList => candidateList.filter(i => i !== item));\n                },\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this)\n            }, item, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: buttonHandler,\n            className: \"button\",\n            name: \"Create Vote\",\n            sx: {\n              m: 2,\n              alignItems: \"center\"\n            },\n            children: \"Create Vote\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: Popup,\n          autoHideDuration: 2000,\n          onClose: handleClose,\n          message: popupText,\n          action: action\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 3,\n          borderRadius: \"16px\"\n        },\n        elevation: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Key, {\n              sx: {\n                fontSize: 45\n              },\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                display: \"block\",\n                children: \"Vote Keys\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                color: \"secondary\",\n                display: \"block\",\n                style: {\n                  lineHeight: \"15px\"\n                },\n                children: \"Distribute vote keys between voters\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"right\",\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              sx: {\n                margin: 1\n              },\n              variant: \"contained\",\n              onClick: exportVoteKeys,\n              children: \"Export CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: copyVoteKeys,\n              children: \"Copy To Clipboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            width: \"100%\",\n            bgcolor: \"background.paper\",\n            borderRadius: \"16px\",\n            position: \"relative\",\n            overflow: \"auto\",\n            maxHeight: 300,\n            \"& ul\": {\n              padding: 0\n            }\n          },\n          subheader: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 24\n          }, this),\n          children: [0].map(sectionId => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: voteKeys.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${item}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)\n              }, `item-${sectionId}-${item}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this)\n          }, `section-${sectionId}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelpPopup, {\n      heading: \"How To Create A Vote\",\n      content: \" 1. Enter the subject of the vote.\\\\n 2. Enter the number of voters.\\\\n 3. Enter the number of candidates.\\\\n 4. Enter the candidates.\\\\n 5. Click on the create vote button.\\\\n 6. The vote will be created.\\\\n \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainView, \"3FweHpmCHF5PhfxT3a0wVCGr3VI=\", false, function () {\n  return [useParty, useStreamQueries, useLedger];\n});\n\n_c = MainView;\nexport default MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/MainView.tsx"],"names":["React","useState","Button","Container","Slider","List","ListItem","ListItemText","TextField","Typography","Box","Snackbar","Grid","Divider","IconButton","Paper","Key","Ballot","Delete","Close","KeyboardReturn","Voting","useParty","useLedger","useStreamQueries","createHash","HelpPopup","voteKeys","hashedVoteKeys","MainView","hashUsername","candidateList","setCandidateList","value","setValue","subjectText","setSubjectText","candidateText","setCandidateText","Popup","setPopup","popupText","setPopupText","assets","localStorage","getItem","JSON","parse","ledger","buttonHandler","event","preventDefault","contracts","length","generateVoteKeys","setItem","stringify","voteDetails","username","voters","votes","voted","voteTimes","candidates","subject","create","hash","input","update","digest","voterCount","i","crypto","require","key","randomBytes","toString","push","addCandidate","includes","copyVoteKeys","navigator","clipboard","writeText","join","exportVoteKeys","csv","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","handleClose","reason","action","p","borderRadius","display","alignItems","flexWrap","fontSize","pt","target","width","m","endAdornment","ml","map","item","e","filter","lineHeight","flexGrow","margin","bgcolor","position","overflow","maxHeight","padding","sectionId"],"mappings":"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","sourcesContent":["// Copyright (c) 2021 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React, { useState } from \"react\";\n\nimport {\n  Button,\n  Container,\n  Slider,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Typography,\n  Box,\n  Snackbar,\n  Grid,\n  Divider,\n  IconButton,\n  Paper,\n} from \"@mui/material\";\n\nimport {\n  Key,\n  Ballot,\n  Delete,\n  Close,\n  KeyboardReturn,\n} from \"@mui/icons-material\";\n\nimport { Voting } from \"@daml.js/create-daml-app\";\n\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\n\nimport { createHash } from \"crypto\";\n\nimport HelpPopup from \"./HelpPopup\";\n\nlet voteKeys: string[] = [];\nlet hashedVoteKeys: string[] = [];\nconst MainView: React.FC = () => {\n  const hashUsername = useParty();\n  const [candidateList, setCandidateList] = useState<string[]>([]);\n\n  const [value, setValue] = React.useState<number>(10);\n  const [subjectText, setSubjectText] = useState(\"\");\n  const [candidateText, setCandidateText] = useState(\"\");\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n\n  const assets = useStreamQueries(Voting.Voting);\n  let voteKeys = localStorage.getItem(\"voteKeys\") || \"\";\n  voteKeys = JSON.parse(voteKeys);\n  // console.log(saved);\n  // const initialValue = JSON.parse(saved);\n  // console.log(initialValue);\n\n  const ledger = useLedger();\n  const buttonHandler = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    if (assets.contracts.length === 0) {\n      const [voteKeys, hashedVoteKeys] = generateVoteKeys(value);\n      localStorage.setItem(\"voteKeys\", JSON.stringify(voteKeys));\n\n      const voteDetails = {\n        username: hashUsername,\n        voters: hashedVoteKeys,\n        votes: [],\n        voted: [],\n        voteTimes: [],\n        candidates: candidateList,\n        subject: subjectText,\n      };\n      ledger.create(Voting.Voting, voteDetails);\n      setPopupText(\"Vote Created\");\n      setPopup(true);\n    } else {\n      setPopupText(\"Vote In Progress\");\n      setPopup(true);\n    }\n  };\n\n  function hash(input: string) {\n    return createHash(\"sha256\").update(input).digest(\"hex\");\n  }\n\n  const generateVoteKeys = (voterCount: any) => {\n    for (let i = 0; i < voterCount; i++) {\n      var crypto = require(\"crypto\");\n      var key = crypto.randomBytes(20).toString(\"hex\");\n      voteKeys.push(`${key}`);\n      hashedVoteKeys.push(hash(key));\n    }\n    return [voteKeys, hashedVoteKeys];\n  };\n\n  const addCandidate = () => {\n    if (candidateList.includes(candidateText)) {\n      setPopupText(\"Candidate already exists\");\n      setPopup(true);\n    } else {\n      setCandidateText(\"\");\n      // append candidateText to the start of candidateList\n      setCandidateList([candidateText, ...candidateList]);\n    }\n  };\n\n  // copy voteKeys to clipboard\n  const copyVoteKeys = () => {\n    navigator.clipboard.writeText(voteKeys.join(\"\\n\"));\n    setPopupText(\"Keys Copied To Clipboard\");\n    setPopup(true);\n  };\n\n  // export voteKeys to csv\n  const exportVoteKeys = () => {\n    const csv = voteKeys.join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"voteKeys.csv\";\n    link.click();\n    setPopupText(\"Keys Exported\");\n    setPopup(true);\n  };\n\n  const handleClose = (\n    event: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setPopup(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <Close fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            <Ballot sx={{ fontSize: 45 }} color=\"primary\" />\n            <Typography variant=\"h5\">Create A Vote</Typography>\n          </div>\n          <Divider sx={{ p: 0 }} />\n\n          <Typography variant=\"h6\" sx={{ pt: 2 }}>\n            What is the vote on?\n          </Typography>\n          <Box textAlign=\"center\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Subject\"\n              variant=\"outlined\"\n              value={subjectText}\n              onChange={(event) => {\n                setSubjectText(event.target.value);\n              }}\n              style={{ width: \"94%\" }}\n              sx={{ m: 2 }}\n            />\n          </Box>\n          <Typography variant=\"h6\">Voters: {value}</Typography>\n\n          <Box textAlign=\"center\">\n            <Slider\n              value={value}\n              aria-label=\"Default\"\n              valueLabelDisplay=\"auto\"\n              name=\"slider\"\n              sx={{ m: 2 }}\n              style={{ width: \"95%\" }}\n              onChange={(event: any) => {\n                setValue(event.target.value);\n              }}\n            />\n          </Box>\n          <Typography variant=\"h6\">\n            Candidates: {candidateList.length}\n          </Typography>\n\n          <Box textAlign=\"center\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Candidate\"\n              variant=\"outlined\"\n              value={candidateText}\n              onChange={(event) => {\n                setCandidateText(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  event.preventDefault();\n                  addCandidate();\n                }\n              }}\n              style={{ width: \"95%\" }}\n              sx={{ m: 2 }}\n              InputProps={{\n                endAdornment: (\n                  <IconButton onClick={addCandidate}>\n                    <KeyboardReturn />\n                  </IconButton>\n                ),\n              }}\n            />\n\n            <List style={{ width: \"95%\" }} sx={{ ml: 2 }}>\n              {candidateList.map((item) => (\n                <ListItem\n                  key={item}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={(e) => {\n                        setCandidateList((candidateList) =>\n                          candidateList.filter((i) => i !== item)\n                        );\n                      }}\n                    >\n                      <Delete />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText primary={item} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n\n          <Box textAlign=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={buttonHandler}\n              className=\"button\"\n              name=\"Create Vote\"\n              sx={{ m: 2, alignItems: \"center\" }}\n            >\n              Create Vote\n            </Button>\n          </Box>\n          <Snackbar\n            open={Popup}\n            autoHideDuration={2000}\n            onClose={handleClose}\n            message={popupText}\n            action={action}\n          />\n        </Paper>\n      </Box>\n\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container>\n            <Grid item>\n              <Key sx={{ fontSize: 45 }} color=\"primary\" />\n            </Grid>\n\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Keys\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  Distribute vote keys between voters\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box textAlign=\"right\" sx={{ flexGrow: 1 }}>\n              <Button\n                sx={{ margin: 1 }}\n                variant=\"contained\"\n                onClick={exportVoteKeys}\n              >\n                Export CSV\n              </Button>\n              <Button variant=\"contained\" onClick={copyVoteKeys}>\n                Copy To Clipboard\n              </Button>\n            </Box>\n          </Grid>\n\n          <List\n            sx={{\n              width: \"100%\",\n              bgcolor: \"background.paper\",\n              borderRadius: \"16px\",\n              position: \"relative\",\n              overflow: \"auto\",\n              maxHeight: 300,\n              \"& ul\": { padding: 0 },\n            }}\n            subheader={<li />}\n          >\n            {[0].map((sectionId) => (\n              <li key={`section-${sectionId}`}>\n                <ul>\n                  {voteKeys.map((item) => (\n                    <ListItem key={`item-${sectionId}-${item}`}>\n                      <ListItemText primary={`${item}`} />\n                    </ListItem>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </List>\n        </Paper>\n      </Box>\n\n      <HelpPopup\n        heading=\"How To Create A Vote\"\n        content=\"\n          1. Enter the subject of the vote.\\n\n          2. Enter the number of voters.\\n\n          3. Enter the number of candidates.\\n\n          4. Enter the candidates.\\n\n          5. Click on the create vote button.\\n\n          6. The vote will be created.\\n\n        \"\n      ></HelpPopup>\n    </Container>\n  );\n};\n\nexport default MainView;\n"]},"metadata":{},"sourceType":"module"}