{"ast":null,"code":"import _asyncToGenerator from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _toConsumableArray from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/node_modules/@babel/runtime/regenerator/index.js\";import React,{useMemo,useState}from\"react\";import{Divider,Grid,Container,Paper,Typography,Box}from\"@mui/material\";import{Poll}from\"@mui/icons-material\";import{Voting}from\"@daml.js/create-daml-app\";import{useParty,useLedger,useStreamFetchByKeys,useStreamQueries}from\"@daml/react\";import{Pie,PieChart,Tooltip,Bar,BarChart,Cell,XAxis,LabelList}from\"recharts\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VoteAnalytics=function VoteAnalytics(){var _assets$contracts$,_assets$contracts$$pa;var username=useParty();var ledger=useLedger();var myUserResult=useStreamFetchByKeys(Voting.User,function(){return[username];},[username]);var assets=useStreamQueries(Voting.Voting);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),radioStatus=_useState2[0],setRadioStatus=_useState2[1];var votes=((_assets$contracts$=assets.contracts[0])===null||_assets$contracts$===void 0?void 0:(_assets$contracts$$pa=_assets$contracts$.payload)===null||_assets$contracts$$pa===void 0?void 0:_assets$contracts$$pa.votes)||[];var votesFrequency=useMemo(function(){var map=new Map();votes.forEach(function(vote){if(map.has(vote)){map.set(vote,(map.get(vote)||1)+1);}else{map.set(vote,1);}});return _toConsumableArray(map).map(function(_ref){var _ref2=_slicedToArray(_ref,2),name=_ref2[0],value=_ref2[1];return{name:name,value:value};});},[votes]);console.log(votesFrequency);// generate list of pastel colours based on length of data01\nvar colours=useMemo(function(){var colours=[];for(var i=0;i<votesFrequency.length;i++){colours.push(\"#\".concat(Math.random().toString(16).slice(2,8)));}return colours;},[votesFrequency]);var buttonHandler=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _assets$contracts$2,_assets$contracts$4;var _assets$contracts$3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!((_assets$contracts$2=assets.contracts[0])!==null&&_assets$contracts$2!==void 0&&_assets$contracts$2.payload.voted.includes(username))){_context.next=4;break;}alert(\"You have already voted\");_context.next=6;break;case 4:_context.next=6;return ledger.exerciseByKey(Voting.Voting.Vote,(_assets$contracts$3=assets.contracts[0])===null||_assets$contracts$3===void 0?void 0:_assets$contracts$3.signatories[0],{voter:username,vote:radioStatus}).catch(console.error);case 6:console.log((_assets$contracts$4=assets.contracts[0])===null||_assets$contracts$4===void 0?void 0:_assets$contracts$4.payload.voted);case 7:case\"end\":return _context.stop();}}},_callee);}));return function buttonHandler(){return _ref3.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Box,{sx:{p:1},children:/*#__PURE__*/_jsxs(Paper,{sx:{p:3,borderRadius:\"16px\"},elevation:2,children:[/*#__PURE__*/_jsxs(Grid,{container:true,spacing:0,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Poll,{sx:{fontSize:50},color:\"primary\"})}),/*#__PURE__*/_jsxs(Grid,{direction:\"column\",children:[/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",display:\"block\",children:\"Vote Analytics\"})}),/*#__PURE__*/_jsx(Grid,{item:true,children:/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",color:\"secondary\",display:\"block\",style:{lineHeight:\"15px\"},children:\"View current vote results\"})})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Typography,{variant:\"h5\",children:\"Vote Progress\"}),/*#__PURE__*/_jsxs(BarChart,{width:400,height:100,data:votesFrequency,children:[/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#8884d8\",children:votesFrequency.map(function(entry,index){return/*#__PURE__*/_jsx(Cell,{fill:colours[index]},\"cell-\".concat(index));})}),/*#__PURE__*/_jsx(Tooltip,{})]}),/*#__PURE__*/_jsxs(PieChart,{width:400,height:400,children:[/*#__PURE__*/_jsxs(Pie,{data:votesFrequency,dataKey:\"value\",nameKey:\"name\",cx:200,cy:200,isAnimationActive:false,children:[votesFrequency.map(function(entry,index){return/*#__PURE__*/_jsx(Cell,{fill:colours[index]},\"cell-\".concat(index));}),/*#__PURE__*/_jsx(LabelList,{dataKey:\"name\"})]}),/*#__PURE__*/_jsx(Tooltip,{})]})]})})});};export default VoteAnalytics;","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteAnalytics.tsx"],"names":["React","useMemo","useState","Divider","Grid","Container","Paper","Typography","Box","Poll","Voting","useParty","useLedger","useStreamFetchByKeys","useStreamQueries","Pie","PieChart","Tooltip","Bar","BarChart","Cell","XAxis","LabelList","VoteAnalytics","username","ledger","myUserResult","User","assets","radioStatus","setRadioStatus","votes","contracts","payload","votesFrequency","map","Map","forEach","vote","has","set","get","name","value","console","log","colours","i","length","push","Math","random","toString","slice","buttonHandler","voted","includes","alert","exerciseByKey","Vote","signatories","voter","catch","error","p","borderRadius","fontSize","lineHeight","entry","index"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\nimport {\n  Divider,\n  Grid,\n  Container,\n  Paper,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport { Poll } from \"@mui/icons-material\";\n\nimport { Voting } from \"@daml.js/create-daml-app\";\n\nimport {\n  useParty,\n  useLedger,\n  useStreamFetchByKeys,\n  useStreamQueries,\n} from \"@daml/react\";\n\nimport {\n  Pie,\n  PieChart,\n  Tooltip,\n  Bar,\n  BarChart,\n  Cell,\n  XAxis,\n  LabelList,\n} from \"recharts\";\n\nconst VoteAnalytics: React.FC = () => {\n  const username = useParty();\n  const ledger = useLedger();\n\n  const myUserResult = useStreamFetchByKeys(Voting.User, () => [username], [\n    username,\n  ]);\n  const assets = useStreamQueries(Voting.Voting);\n  const [radioStatus, setRadioStatus] = useState(\"\");\n\n  const votes = assets.contracts[0]?.payload?.votes || [];\n\n  const votesFrequency = useMemo(() => {\n    const map = new Map<string, number>();\n    votes.forEach((vote) => {\n      if (map.has(vote)) {\n        map.set(vote, (map.get(vote) || 1) + 1);\n      } else {\n        map.set(vote, 1);\n      }\n    });\n    return [...map].map(([name, value]) => ({ name, value }));\n  }, [votes]);\n\n  console.log(votesFrequency);\n  // generate list of pastel colours based on length of data01\n  const colours = useMemo(() => {\n    const colours = [];\n    for (let i = 0; i < votesFrequency.length; i++) {\n      colours.push(`#${Math.random().toString(16).slice(2, 8)}`);\n    }\n    return colours;\n  }, [votesFrequency]);\n\n  const buttonHandler = async () => {\n    if (assets.contracts[0]?.payload.voted.includes(username)) {\n      alert(\"You have already voted\");\n    } else {\n      await ledger\n        .exerciseByKey(\n          Voting.Voting.Vote,\n          assets.contracts[0]?.signatories[0],\n          { voter: username, vote: radioStatus }\n        )\n        .catch(console.error);\n    }\n    console.log(assets.contracts[0]?.payload.voted);\n  };\n\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container spacing={0}>\n            <Grid item>\n              <Poll sx={{ fontSize: 50 }} color=\"primary\" />\n            </Grid>\n            <Grid direction=\"column\">\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Analytics\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  View current vote results\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Divider />\n          <Typography variant=\"h5\">Vote Progress</Typography>\n\n          <BarChart width={400} height={100} data={votesFrequency}>\n            <XAxis dataKey=\"name\" />\n            <Bar dataKey=\"value\" fill=\"#8884d8\">\n              {votesFrequency.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={colours[index]} />\n              ))}\n            </Bar>\n\n            <Tooltip />\n          </BarChart>\n\n          <PieChart width={400} height={400}>\n            <Pie\n              data={votesFrequency}\n              dataKey=\"value\"\n              nameKey=\"name\"\n              cx={200}\n              cy={200}\n              isAnimationActive={false}\n            >\n              {votesFrequency.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={colours[index]} />\n              ))}\n              <LabelList dataKey=\"name\" />\n            </Pie>\n            <Tooltip />\n          </PieChart>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default VoteAnalytics;\n"]},"metadata":{},"sourceType":"module"}