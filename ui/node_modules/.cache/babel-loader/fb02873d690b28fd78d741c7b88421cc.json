{"ast":null,"code":"var _jsxFileName = \"/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Grid, List, ListItem, Container, FormLabel, FormControlLabel, RadioGroup, FormControl, Typography, Radio, Divider, Box, Snackbar, IconButton, Paper } from \"@mui/material\";\nimport { Close, HowToVote, Logout } from \"@mui/icons-material\";\nimport { Voting } from \"@daml.js/create-daml-app\";\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\nimport { Link } from \"react-router-dom\";\nimport { InvalidVoteKey } from \"./CatchNotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VoteScreen = _ref => {\n  _s();\n\n  let {\n    onLogout\n  } = _ref;\n  const hashUsername = useParty();\n  const ledger = useLedger();\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setPopup(false);\n  };\n\n  const action = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n\n  const assets = useStreamQueries(Voting.Voting);\n  const [radioStatus, setRadioStatus] = useState(\"\"); // get current unix time stamp\n\n  const now = new Date().getTime();\n\n  const buttonHandler = async () => {\n    var _assets$contracts$;\n\n    if ((_assets$contracts$ = assets.contracts[0]) !== null && _assets$contracts$ !== void 0 && _assets$contracts$.payload.voted.includes(hashUsername)) {\n      setPopupText(\"You have already voted\");\n      setPopup(true);\n    } else {\n      var _assets$contracts$2;\n\n      await ledger.exerciseByKey(Voting.Voting.Vote, (_assets$contracts$2 = assets.contracts[0]) === null || _assets$contracts$2 === void 0 ? void 0 : _assets$contracts$2.signatories[0], {\n        voter: hashUsername,\n        vote: radioStatus,\n        unixTime: now.toString()\n      }).catch(console.error);\n      setPopupText(\"Your vote has been cast. Please or close the browser tab\");\n      setPopup(true);\n    }\n  };\n\n  if (assets.contracts[0] === undefined) {\n    return /*#__PURE__*/_jsxDEV(InvalidVoteKey, {\n      onLogout: onLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  } else {\n    var _assets$contracts$0$p, _assets$contracts$3, _assets$contracts$3$p, _assets$contracts$4, _assets$contracts$4$p;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"right\",\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"inherit\",\n          startIcon: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 24\n          }, this),\n          onClick: onLogout,\n          component: Link,\n          to: \"/\",\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          style: {\n            height: \"75vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3,\n              borderRadius: \"16px\",\n              width: \"90%\"\n            },\n            elevation: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 0,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(HowToVote, {\n                  sx: {\n                    fontSize: 50\n                  },\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    display: \"block\",\n                    children: \"Vote\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: \"secondary\",\n                    display: \"block\",\n                    style: {\n                      lineHeight: \"15px\"\n                    },\n                    children: \"Read the vote description carefully and choose an option\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                pt: 2\n              },\n              children: \"Vote Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), (_assets$contracts$0$p = (_assets$contracts$3 = assets.contracts[0]) === null || _assets$contracts$3 === void 0 ? void 0 : (_assets$contracts$3$p = _assets$contracts$3.payload) === null || _assets$contracts$3$p === void 0 ? void 0 : _assets$contracts$3$p.subject) !== null && _assets$contracts$0$p !== void 0 ? _assets$contracts$0$p : \"Loading...\", /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                pb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  id: \"demo-radio-buttons-group-label\",\n                  children: \"Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                  \"aria-labelledby\": \"demo-radio-buttons-group-label\",\n                  defaultValue: \"female\",\n                  name: \"radio-buttons-group\",\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    children: (_assets$contracts$4 = assets.contracts[0]) === null || _assets$contracts$4 === void 0 ? void 0 : (_assets$contracts$4$p = _assets$contracts$4.payload) === null || _assets$contracts$4$p === void 0 ? void 0 : _assets$contracts$4$p.candidates.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n                      children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                        value: item,\n                        control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 158,\n                          columnNumber: 38\n                        }, this),\n                        label: item,\n                        onChange: event => {\n                          setRadioStatus(item);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 27\n                      }, this)\n                    }, item, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              textAlign: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: buttonHandler,\n                className: \"button\",\n                name: \"Create Vote\",\n                sx: {\n                  m: 2,\n                  alignItems: \"center\"\n                },\n                children: \"Vote\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n              open: Popup,\n              autoHideDuration: 4000,\n              onClose: handleClose,\n              message: popupText,\n              action: action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(VoteScreen, \"f+OGd0xYD3VwBx2eh1/1QC3Hsws=\", false, function () {\n  return [useParty, useLedger, useStreamQueries];\n});\n\n_c = VoteScreen;\nexport default VoteScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"VoteScreen\");","map":{"version":3,"sources":["/Users/finn.jones/Documents/Github/Blockchain-Voting/Testing/create-daml-app/ui/src/components/VoteScreen.tsx"],"names":["React","useState","Button","Grid","List","ListItem","Container","FormLabel","FormControlLabel","RadioGroup","FormControl","Typography","Radio","Divider","Box","Snackbar","IconButton","Paper","Close","HowToVote","Logout","Voting","useParty","useLedger","useStreamQueries","Link","InvalidVoteKey","VoteScreen","onLogout","hashUsername","ledger","Popup","setPopup","popupText","setPopupText","handleClose","event","reason","action","assets","radioStatus","setRadioStatus","now","Date","getTime","buttonHandler","contracts","payload","voted","includes","exerciseByKey","Vote","signatories","voter","vote","unixTime","toString","catch","console","error","undefined","p","height","borderRadius","width","fontSize","lineHeight","pt","subject","pb","candidates","map","item","m","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  List,\n  ListItem,\n  Container,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  FormControl,\n  Typography,\n  Radio,\n  Divider,\n  Box,\n  Snackbar,\n  IconButton,\n  Paper,\n} from \"@mui/material\";\nimport { Close, HowToVote, Logout } from \"@mui/icons-material\";\nimport { Voting } from \"@daml.js/create-daml-app\";\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\nimport { Link } from \"react-router-dom\";\nimport { InvalidVoteKey } from \"./CatchNotFound\";\n\ntype Props = {\n  onLogout: () => void;\n};\n\nconst VoteScreen: React.FC<Props> = ({ onLogout }) => {\n  const hashUsername = useParty();\n  const ledger = useLedger();\n\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n\n  const handleClose = (\n    event: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setPopup(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <Close fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  const assets = useStreamQueries(Voting.Voting);\n  const [radioStatus, setRadioStatus] = useState(\"\");\n  // get current unix time stamp\n  const now = new Date().getTime();\n\n  const buttonHandler = async () => {\n    if (assets.contracts[0]?.payload.voted.includes(hashUsername)) {\n      setPopupText(\"You have already voted\");\n\n      setPopup(true);\n    } else {\n      await ledger\n        .exerciseByKey(\n          Voting.Voting.Vote,\n          assets.contracts[0]?.signatories[0],\n          { voter: hashUsername, vote: radioStatus, unixTime: now.toString() }\n        )\n        .catch(console.error);\n      setPopupText(\"Your vote has been cast. Please or close the browser tab\");\n\n      setPopup(true);\n    }\n  };\n  if (assets.contracts[0] === undefined) {\n    return <InvalidVoteKey onLogout={onLogout} />;\n  } else {\n    return (\n      <>\n        <Box textAlign={\"right\"} sx={{ p: 1 }}>\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={<Logout />}\n            onClick={onLogout}\n            component={Link}\n            to=\"/\"\n          >\n            Log Out\n          </Button>\n        </Box>\n        <Container>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{ height: \"75vh\" }}\n          >\n            <Paper\n              sx={{ p: 3, borderRadius: \"16px\", width: \"90%\" }}\n              elevation={2}\n            >\n              <Grid container spacing={0}>\n                <Grid item>\n                  <HowToVote sx={{ fontSize: 50 }} color=\"primary\" />\n                </Grid>\n\n                <Grid item>\n                  <Grid item>\n                    <Typography variant=\"h5\" display=\"block\">\n                      Vote\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography\n                      variant=\"subtitle1\"\n                      color=\"secondary\"\n                      display=\"block\"\n                      style={{ lineHeight: \"15px\" }}\n                    >\n                      Read the vote description carefully and choose an option\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Divider />\n\n              <Typography variant=\"h6\" sx={{ pt: 2 }}>\n                Vote Description\n              </Typography>\n              {assets.contracts[0]?.payload?.subject ?? \"Loading...\"}\n\n              <Divider sx={{ pb: 2 }} />\n              <Box textAlign=\"center\">\n                <FormControl>\n                  <FormLabel id=\"demo-radio-buttons-group-label\">\n                    Options\n                  </FormLabel>\n                  <RadioGroup\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\n                    defaultValue=\"female\"\n                    name=\"radio-buttons-group\"\n                  >\n                    <List>\n                      {assets.contracts[0]?.payload?.candidates.map((item) => (\n                        <ListItem key={item}>\n                          <FormControlLabel\n                            value={item}\n                            control={<Radio />}\n                            label={item}\n                            onChange={(event) => {\n                              setRadioStatus(item);\n                            }}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </RadioGroup>\n                </FormControl>\n              </Box>\n              <Box textAlign=\"center\">\n                <Button\n                  variant=\"contained\"\n                  onClick={buttonHandler}\n                  className=\"button\"\n                  name=\"Create Vote\"\n                  sx={{ m: 2, alignItems: \"center\" }}\n                >\n                  Vote\n                </Button>\n              </Box>\n              <Snackbar\n                open={Popup}\n                autoHideDuration={4000}\n                onClose={handleClose}\n                message={popupText}\n                action={action}\n              />\n            </Paper>\n          </Grid>\n        </Container>\n      </>\n    );\n  }\n};\n\nexport default VoteScreen;\n"]},"metadata":{},"sourceType":"module"}