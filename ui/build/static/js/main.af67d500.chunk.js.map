{"version":3,"sources":["../daml.js/votencrypt-0.1.0/lib/Voting/index.js","../daml.js/votencrypt-0.1.0/lib/Voting/module.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/Internal/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/Internal/Template/index.js","../daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662/lib/DA/Internal/Template/module.js","../daml.js/votencrypt-0.1.0/lib/index.js","components/LoginScreen.tsx","config.ts","components/CatchNotFound.tsx","components/MainScreen.tsx","components/HelpPopup.tsx","components/VoteManagement.tsx","components/DeadLineCountDown.tsx","components/VoteScreen.tsx","components/VoteAnalytics.tsx","components/MainView.tsx","components/App.tsx","auth/auth0-provider-with-history.js","index.tsx"],"names":["Object","defineProperty","exports","value","m","p","hasOwnProperty","__export","require","jtv","damlTypes","pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662","Vote","decoder","lazyMemo","object","voter","Party","vote","Text","unixTime","Int","encode","__typed__","Voting","templateId","keyDecoder","keyEncode","username","deadLine","voters","List","votes","voted","voteTimes","options","subject","Archive","template","choiceName","argumentDecoder","DA","Internal","Template","argumentEncode","resultDecoder","Unit","resultEncode","ContractId","registerTemplate","User","packageId","usernameExport","authConfig","ledgerId","process","REACT_APP_LEDGER_ID","provider","makeToken","party","payload","httpBaseUrl","undefined","hash","input","createHash","update","digest","wrap","component","Grid","container","direction","justifyContent","alignItems","style","height","item","Typography","variant","color","textAlign","fontWeight","Paper","sx","borderRadius","elevation","LandingScreen","onLogin","loginWithPopup","useAuth0","user","isAuthenticated","React","useState","loading","setLoading","navigate","useNavigate","login","useCallback","credentials","a","ledger","Ledger","token","fetchByKey","userCreds","create","alert","JSON","stringify","handleLogin","name","sub","hashedStub","handleLoginButton","screen_hint","width","spacing","LoadingButton","onClick","Button","className","Link","to","LoginScreenVote","setUsername","hashedUsername","window","location","pathname","length","TextField","placeholder","paddingBottom","onChange","e","currentTarget","onKeyPress","key","preventDefault","substring","Box","display","src","LogoutConfirm","onLogout","flexGrow","noWrap","PageNotFound","MainScreen","logout","open","setOpen","AppBar","position","Toolbar","IconButton","edge","startIcon","Logout","returnTo","origin","padding","Drawer","anchor","onClose","role","ListItem","button","ListItemIcon","Ballot","ListItemText","primary","Poll","PublishedWithChanges","HelpPopup","heading","content","helpOpen","setHelpOpen","SpeedDial","ariaLabel","bottom","right","icon","QuestionMark","Dialog","reason","whiteSpace","split","map","i","VoteManagement","useLedger","assets","useStreamQueries","buttonHandler","archiveByKey","contracts","signatories","Container","fontSize","lineHeight","px","pb","pt","Divider","currentItem","defaultRemainingTime","days","hours","minutes","seconds","getRemainingSeconds","nowDayjs","timestampDayjs","diff","getRemainingMinutes","getRemainingHours","getRemainingDays","DeadLineCountDown","voteDeadlineUnix","voteDeadLineTimeMs","parseInt","remainingTime","setRemainingTime","useEffect","intervalId","setInterval","timestampMs","dayjs","isBefore","toString","getRemainingTimeUntilMs","clearInterval","VoteScreen","hashUsername","useParty","Voted","setVoted","Popup","setPopup","popupText","setPopupText","handleClose","event","action","Fragment","size","Close","radioStatus","setRadioStatus","now","Date","getTime","includes","exerciseByKey","catch","console","error","HowToVote","Snackbar","autoHideDuration","message","FormControl","FormLabel","id","RadioGroup","defaultValue","FormControlLabel","control","Radio","label","VoteAnalytics","voteProgress","Math","round","votesFrequency","useMemo","voteFrequencyMap","Map","forEach","has","set","get","colours","push","random","slice","votesFrequencyByTime","voteTime","ajustedTime","time","reverse","LineTooltip","active","py","LinearProgress","BarChart","data","XAxis","dataKey","Tooltip","cursor","fill","Bar","entry","index","Cell","PieChart","Pie","nameKey","LabelList","ResponsiveContainer","LineChart","margin","top","left","CartesianGrid","strokeDasharray","tickFormatter","moment","format","Label","YAxis","allowDecimals","angle","Line","type","stroke","activeDot","r","hashedVoteKeys","MainView","optionList","setOptionList","voteKeys","setVoteKeys","setValue","subjectText","setSubjectText","optionText","setOptionText","dateTimeVal","setDateTimeVal","Subject","Option","setError","voteNotCreated","setVoteNotCreated","today","crypto","updatedObj","keys","generateVoteKeys","stringDate","floor","voteDetails","voterCount","randomBytes","addOption","flexWrap","target","Slider","valueLabelDisplay","InputProps","endAdornment","KeyboardReturn","ml","secondaryAction","filter","Delete","LocalizationProvider","dateAdapter","AdapterDateFns","MobileDateTimePicker","minDateTime","newValue","renderInput","params","Key","csv","join","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","click","disabled","navigator","clipboard","writeText","bgcolor","overflow","maxHeight","backgroundColor","overflowX","subheader","sectionId","App","setCredentials","preferedScheme","useMediaQuery","theme","createTheme","palette","mode","main","secondary","typography","fontFamily","subtitle1","h5","h6","wsBaseUrl","ThemeProvider","CssBaseline","enableColorScheme","path","element","Auth0ProviderWithHistory","children","domain","clientId","redirectUri","onRedirectCallback","appState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af67d500.chunk.js","sourcesContent":["\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require('./module'));\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable-next-line no-unused-vars */\nvar jtv = require('@mojotech/json-type-validation');\n/* eslint-disable-next-line no-unused-vars */\nvar damlTypes = require('@daml/types');\n/* eslint-disable-next-line no-unused-vars */\nvar damlLedger = require('@daml/ledger');\n\nvar pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662 = require('@daml.js/d14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662');\n\n\nexports.Vote = {\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({voter: damlTypes.Party.decoder, vote: damlTypes.Text.decoder, unixTime: damlTypes.Int.decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    voter: damlTypes.Party.encode(__typed__.voter),\n    vote: damlTypes.Text.encode(__typed__.vote),\n    unixTime: damlTypes.Int.encode(__typed__.unixTime),\n  };\n}\n,\n};\n\n\n\nexports.Voting = {\n  templateId: '5ea1b66908dcd5d9a7a2e7417b1c1a22a1ed31a424113939d3478c2e94172e73:Voting:Voting',\n  keyDecoder: damlTypes.lazyMemo(function () { return damlTypes.lazyMemo(function () { return damlTypes.Party.decoder; }); }),\n  keyEncode: function (__typed__) { return damlTypes.Party.encode(__typed__); },\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({username: damlTypes.Party.decoder, deadLine: damlTypes.Text.decoder, voters: damlTypes.List(damlTypes.Party).decoder, votes: damlTypes.List(damlTypes.Text).decoder, voted: damlTypes.List(damlTypes.Party).decoder, voteTimes: damlTypes.List(damlTypes.Int).decoder, options: damlTypes.List(damlTypes.Text).decoder, subject: damlTypes.Text.decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    username: damlTypes.Party.encode(__typed__.username),\n    deadLine: damlTypes.Text.encode(__typed__.deadLine),\n    voters: damlTypes.List(damlTypes.Party).encode(__typed__.voters),\n    votes: damlTypes.List(damlTypes.Text).encode(__typed__.votes),\n    voted: damlTypes.List(damlTypes.Party).encode(__typed__.voted),\n    voteTimes: damlTypes.List(damlTypes.Int).encode(__typed__.voteTimes),\n    options: damlTypes.List(damlTypes.Text).encode(__typed__.options),\n    subject: damlTypes.Text.encode(__typed__.subject),\n  };\n}\n,\n  Archive: {\n    template: function () { return exports.Voting; },\n    choiceName: 'Archive',\n    argumentDecoder: damlTypes.lazyMemo(function () { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.decoder; }),\n    argumentEncode: function (__typed__) { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.Unit.decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.Unit.encode(__typed__); },\n  },\n  Vote: {\n    template: function () { return exports.Voting; },\n    choiceName: 'Vote',\n    argumentDecoder: damlTypes.lazyMemo(function () { return exports.Vote.decoder; }),\n    argumentEncode: function (__typed__) { return exports.Vote.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.ContractId(exports.Voting).decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.ContractId(exports.Voting).encode(__typed__); },\n  },\n};\n\n\ndamlTypes.registerTemplate(exports.Voting);\n\n\n\nexports.User = {\n  templateId: '5ea1b66908dcd5d9a7a2e7417b1c1a22a1ed31a424113939d3478c2e94172e73:Voting:User',\n  keyDecoder: damlTypes.lazyMemo(function () { return damlTypes.lazyMemo(function () { return damlTypes.Party.decoder; }); }),\n  keyEncode: function (__typed__) { return damlTypes.Party.encode(__typed__); },\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({username: damlTypes.Party.decoder, }); }),\n  encode: function (__typed__) {\n  return {\n    username: damlTypes.Party.encode(__typed__.username),\n  };\n}\n,\n  Archive: {\n    template: function () { return exports.User; },\n    choiceName: 'Archive',\n    argumentDecoder: damlTypes.lazyMemo(function () { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.decoder; }),\n    argumentEncode: function (__typed__) { return pkgd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662.DA.Internal.Template.Archive.encode(__typed__); },\n    resultDecoder: damlTypes.lazyMemo(function () { return damlTypes.Unit.decoder; }),\n    resultEncode: function (__typed__) { return damlTypes.Unit.encode(__typed__); },\n  },\n};\n\n\ndamlTypes.registerTemplate(exports.User);\n\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DA = require('./DA');\nexports.DA = DA;\nexports.packageId = 'd14e08374fc7197d6a0de468c968ae8ba3aadbf9315476fd39071831f5923662';\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Internal = require('./Internal');\nexports.Internal = Internal;\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template = require('./Template');\nexports.Template = Template;\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require('./module'));\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint-disable-next-line no-unused-vars */\nvar jtv = require('@mojotech/json-type-validation');\n/* eslint-disable-next-line no-unused-vars */\nvar damlTypes = require('@daml/types');\n/* eslint-disable-next-line no-unused-vars */\nvar damlLedger = require('@daml/ledger');\n\n\nexports.Archive = {\n  decoder: damlTypes.lazyMemo(function () { return jtv.object({}); }),\n  encode: function (__typed__) {\n  return {\n  };\n}\n,\n};\n\n","\"use strict\";\n/* eslint-disable-next-line no-unused-vars */\nfunction __export(m) {\n/* eslint-disable-next-line no-prototype-builtins */\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Voting = require('./Voting');\nexports.Voting = Voting;\nexports.packageId = '5ea1b66908dcd5d9a7a2e7417b1c1a22a1ed31a424113939d3478c2e94172e73';\n","import React, { useCallback } from \"react\";\nimport { Button, TextField, Paper, Typography, Grid, Box } from \"@mui/material\";\nimport Credentials from \"../Credentials\";\nimport Ledger from \"@daml/ledger\";\nimport { Voting } from \"@daml.js/votencrypt\";\nimport { authConfig, httpBaseUrl } from \"../config\";\nimport { createHash } from \"crypto\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\n\ntype Props = {\n  onLogin: (credentials: Credentials) => void;\n};\n\n// Hashing function that converts a string to a hash using sha256\nfunction hash(input: string) {\n  return createHash(\"sha256\").update(input).digest(\"hex\");\n}\n\nexport let usernameExport: any;\n\n/* A function that takes in a component and returns a component. It is used to wrap the components in\nthe landing page and the login page. */\nconst wrap: (c: JSX.Element) => JSX.Element = (component) => (\n  <>\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      style={{ height: \"100vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h3\" color=\"primary\" textAlign=\"center\">\n          Votencrypt\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Typography\n          variant=\"h6\"\n          fontWeight=\"600\"\n          color=\"primary\"\n          textAlign=\"center\"\n        >\n          Secure Voting On The Blockchain\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Paper sx={{ p: 2, borderRadius: \"16px\" }} elevation={2}>\n          {component}\n        </Paper>\n      </Grid>\n    </Grid>\n  </>\n);\n/**\n * This function is the landing page for the app. It has two buttons, one to create a vote and one to\n * vote. The create a vote button will take you to the login page if you are not logged in. If you are\n * logged in, it will take you to the create a vote page. The vote button will take you to the vote\n * login page\n * @param  - React.FC<Props> = ({ onLogin }) => {\n * @returns A function that returns a component\n */\n\nexport const LandingScreen: React.FC<Props> = ({ onLogin }) => {\n  const { loginWithPopup } = useAuth0();\n  const { user, isAuthenticated } = useAuth0();\n  const [loading, setLoading] = React.useState(false);\n\n  const navigate = useNavigate();\n\n  const login = useCallback(\n    async (credentials: Credentials) => {\n      try {\n        const ledger = new Ledger({ token: credentials.token, httpBaseUrl });\n        let userContract = await ledger.fetchByKey(\n          Voting.User,\n          credentials.party\n        );\n\n        if (userContract === null) {\n          const userCreds = {\n            username: credentials.party,\n          };\n          userContract = await ledger.create(Voting.User, userCreds);\n        }\n        navigate(\"/CreateVote\");\n\n        onLogin(credentials);\n      } catch (error) {\n        alert(`Unknown error:\\n${JSON.stringify(error)}`);\n      }\n    },\n    [onLogin]\n  );\n\n  const handleLogin = async () => {\n    // if user is not undefined then run\n\n    if (user !== undefined) {\n      const { name, sub } = user;\n\n      usernameExport = name;\n      const hashedStub = hash(sub ? sub : \"\");\n      await login({\n        party: hashedStub,\n        token: authConfig.makeToken(hashedStub),\n      });\n    }\n  };\n  const handleLoginButton = async () => {\n    setLoading(true);\n    if (isAuthenticated === false) {\n      loginWithPopup({\n        screen_hint: \"signup\",\n      });\n    }\n  };\n  if (isAuthenticated === true && loading === true) {\n    handleLogin();\n    return <></>;\n  } else {\n    return wrap(\n      <>\n        <Grid\n          container\n          direction=\"column\"\n          style={{ width: \"400px\" }}\n          spacing={2}\n        >\n          <Grid item>\n            <LoadingButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleLoginButton}\n              style={{ width: \"100%\" }}\n              loading={loading}\n            >\n              Login\n            </LoadingButton>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"test-select-login-button\"\n              component={Link}\n              to=\"/VoteLogin\"\n              style={{ width: \"100%\" }}\n            >\n              Vote\n            </Button>\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n};\n\n/* This function is the login page for voters. It has a text field to enter the vote key and a button\nto vote. The vote button will take you to the vote page. */\nexport const LoginScreenVote: React.FC<Props> = ({ onLogin }) => {\n  const navigate = useNavigate();\n  const [loading, setLoading] = React.useState(false);\n\n  const login = useCallback(\n    async (credentials: Credentials) => {\n      try {\n        const ledger = new Ledger({ token: credentials.token, httpBaseUrl });\n        let userContract = await ledger.fetchByKey(\n          Voting.User,\n          credentials.party\n        );\n\n        if (userContract === null) {\n          const user = {\n            username: credentials.party,\n          };\n          userContract = await ledger.create(Voting.User, user);\n        }\n        navigate(\"/Vote\");\n\n        onLogin(credentials);\n      } catch (error) {\n        alert(`Unknown error:\\n${JSON.stringify(error)}`);\n      }\n    },\n    [onLogin]\n  );\n  const [username, setUsername] = React.useState(\"\");\n\n  const handleLogin = async () => {\n    usernameExport = username;\n\n    const hashedUsername = hash(username);\n\n    await login({\n      party: hashedUsername,\n      token: authConfig.makeToken(hashedUsername),\n    });\n  };\n  if (window.location.pathname.length <= \"/VoteLogin/\".length) {\n    return wrap(\n      <>\n        <Grid container direction=\"column\" style={{ width: \"400px\" }}>\n          <Grid item>\n            <TextField\n              placeholder=\"Enter Vote Key\"\n              value={username}\n              className=\"test-select-username-field\"\n              sx={{ paddingBottom: 2 }}\n              style={{ width: \"100%\" }}\n              onChange={(e) => setUsername(e.currentTarget.value)}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\" && username !== \"\") {\n                  e.preventDefault();\n                  handleLogin();\n                }\n              }}\n            />\n          </Grid>\n\n          <Grid item>\n            <LoadingButton\n              color=\"primary\"\n              onClick={(e) => {\n                if (username !== \"\") {\n                  setLoading(true);\n                  e.preventDefault();\n                  handleLogin();\n                }\n              }}\n              loading={loading}\n              variant=\"contained\"\n              style={{ width: \"100%\" }}\n            >\n              Vote\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </>\n    );\n  } else {\n    // assign characters in url path after  \"/VoteLogin/\" to username\n    if (username === \"\") {\n      setUsername(\n        window.location.pathname.substring(\n          \"/VoteLogin/\".length,\n          window.location.pathname.length\n        )\n      );\n      handleLogin();\n    }\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        sx={{ display: \"flex\", height: \"100vh\" }}\n      >\n        <img src=\"/preLoader.svg\" />\n      </Box>\n    );\n  }\n};\n","import { encode } from 'jwt-simple';\n\nexport type Insecure = {\n  provider: \"none\",\n  makeToken: (party: string) => string,\n  ledgerId: string\n};\n\n\nexport const isLocalDev = process.env.NODE_ENV === 'development';\nexport type Authentication = Insecure;\n\n\n// Encoding user data and ledger data\nexport const authConfig: Authentication = (() => {\n    const ledgerId: string = process.env.REACT_APP_LEDGER_ID ?? \"votencrypt-sandbox\"\n    const auth: Insecure = {\n      provider: \"none\",\n      ledgerId: ledgerId,\n      makeToken: (party) => {\n        const payload = {\n          \"https://daml.com/ledger-api\": {\n            \"ledgerId\": ledgerId,\n            \"applicationId\": 'votencrypt',\n            \"actAs\": [party]\n          }\n        }\n        return encode(payload, \"secret\", \"HS256\");\n      }\n    };\n    return auth;\n  }\n)();\n\nexport const httpBaseUrl = undefined;\nexport const wsBaseUrl = isLocalDev ? 'ws://localhost:7575/' : undefined;\n","import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Button, Box, Paper, Typography } from \"@mui/material\";\n\ntype Props = {\n  onLogout: () => void;\n};\n\nexport const LogoutConfirm: React.FC<Props> = ({ onLogout }) => {\n  const navigate = useNavigate();\n\n  return (\n    // are you sure you want to logout screen\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Typography variant=\"h5\" sx={{ flexGrow: 1 }} noWrap>\n            Are you sure you want to logout?\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to=\"/\"\n            onClick={onLogout}\n            sx={{ m: 2 }}\n          >\n            Log Out\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => navigate(1)}\n            sx={{ m: 2 }}\n          >\n            Take me back\n          </Button>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n\n// Create a page not found screen\nexport const PageNotFound = () => {\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Typography variant=\"h5\" sx={{ flexGrow: 1 }} noWrap>\n            Oops! Page not found.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to=\"/\"\n            sx={{ m: 2 }}\n          >\n            Go to home page\n          </Button>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n\nexport const InvalidVoteKey = ({ onLogout }: any) => {\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n      >\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Typography variant=\"h5\" sx={{ flexGrow: 1 }} noWrap>\n            Vote key is invalid.\n          </Typography>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onLogout}\n            component={Link}\n            to=\"/\"\n            sx={{ m: 2 }}\n          >\n            Go to home page\n          </Button>\n        </Paper>\n      </Box>\n    </>\n  );\n};\n","import React from \"react\";\nimport {\n  Typography,\n  Box,\n  IconButton,\n  Toolbar,\n  Drawer,\n  Button,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  AppBar,\n} from \"@mui/material\";\n\nimport { Link } from \"react-router-dom\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport {\n  Ballot,\n  Poll,\n  Logout,\n  PublishedWithChanges,\n} from \"@mui/icons-material\";\n\nimport { usernameExport } from \"./LoginScreen\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\ntype Props = {\n  onLogout: () => void;\n};\n\nconst MainScreen: React.FC<Props> = ({ onLogout }) => {\n  const { logout } = useAuth0();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const LogoutCall = () => {\n    logout({\n      returnTo: window.location.origin,\n    });\n  };\n  return (\n    <>\n      <Box sx={{ flexGrow: 1, m: 2 }}>\n        <AppBar position=\"static\" sx={{ borderRadius: \"16px\" }}>\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              edge=\"start\"\n              onClick={handleDrawerOpen}\n              className=\"menu-button\"\n            >\n              <MenuIcon />\n            </IconButton>\n\n            <Typography variant=\"h5\">Votencrypt</Typography>\n\n            <Typography sx={{ flexGrow: 1 }} noWrap></Typography>\n\n            <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              startIcon={<Logout />}\n              onClick={LogoutCall}\n            >\n              Log Out\n            </Button>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Typography\n        variant=\"h3\"\n        textAlign=\"center\"\n        color=\"primary\"\n        sx={{ padding: 3 }}\n      >\n        Welcome, {usernameExport}\n      </Typography>\n      <Drawer anchor=\"left\" open={open} onClose={() => setOpen(false)}>\n        <Box p={2} width=\"250px\" textAlign=\"center\" role=\"presentation\">\n          <Typography variant=\"h6\" component=\"div\">\n            Menu\n          </Typography>\n          <List>\n            <ListItem\n              button\n              component={Link}\n              to=\"/CreateVote\"\n              className=\"test-select-list-item\"\n            >\n              <ListItemIcon>\n                <Ballot />\n              </ListItemIcon>\n              <ListItemText primary=\"Create Vote\" />\n            </ListItem>\n\n            <ListItem\n              button\n              component={Link}\n              to=\"/VoteAnalytics\"\n              className=\"test-select-list-item\"\n            >\n              <ListItemIcon>\n                <Poll />\n              </ListItemIcon>\n              <ListItemText primary=\"Analytics\" />\n            </ListItem>\n\n            <ListItem\n              button\n              component={Link}\n              to=\"/VoteManagement\"\n              className=\"test-select-list-item\"\n            >\n              <ListItemIcon>\n                <PublishedWithChanges />\n              </ListItemIcon>\n              <ListItemText primary=\"Vote Management\" />\n            </ListItem>\n          </List>\n        </Box>\n      </Drawer>\n    </>\n  );\n};\n\nexport default MainScreen;\n","import * as React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport Box from \"@mui/material/Box\";\n\nimport Typography from \"@mui/material/Typography\";\nimport SpeedDial from \"@mui/material/SpeedDial\";\nimport { QuestionMark } from \"@mui/icons-material\";\n\nconst HelpPopup = ({\n  heading,\n  content,\n}: {\n  heading: string;\n  content: string;\n}) => {\n  const [helpOpen, setHelpOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setHelpOpen(true);\n  };\n\n  const handleClose = (reason: string) => {\n    setHelpOpen(false);\n  };\n  return (\n    <div>\n      <SpeedDial\n        ariaLabel=\"SpeedDial basic example\"\n        sx={{ position: \"fixed\", bottom: 16, right: 16 }}\n        icon={<QuestionMark />}\n        onClick={handleClickOpen}\n      ></SpeedDial>\n      <Dialog open={helpOpen} onClose={handleClose}>\n        <Typography variant=\"h6\" textAlign=\"center\" sx={{ p: 1 }}>\n          {heading}\n        </Typography>\n\n        <Box sx={{ p: 4 }}>\n          <Typography variant=\"h6\" style={{ whiteSpace: \"pre-line\" }}>\n            {content.split(\"\\\\n\").map((i, key) => {\n              return <div key={key}>{i}</div>;\n            })}\n          </Typography>\n        </Box>\n      </Dialog>\n    </div>\n  );\n};\nexport default HelpPopup;\n","import React from \"react\";\n\nimport {\n  Paper,\n  Typography,\n  Container,\n  Grid,\n  Divider,\n  Box,\n  Button,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@mui/material\";\n\nimport { useLedger, useStreamQueries } from \"@daml/react\";\n\nimport { Voting } from \"@daml.js/votencrypt\";\n\nimport { PublishedWithChanges } from \"@mui/icons-material\";\nimport HelpPopup from \"./HelpPopup\";\n\nconst VoteManagement: React.FC = () => {\n  const ledger = useLedger();\n\n  /* A react hook that is used to query the ledger for all contracts of type Voting.Voting. */\n  const assets = useStreamQueries(Voting.Voting);\n\n  /**\n   * It archives the contract with the key `Voting.Voting` and the signatory\n   * `assets.contracts[0]?.signatories[0]`\n   */\n  const buttonHandler = async () => {\n    await ledger.archiveByKey(\n      Voting.Voting,\n      assets.contracts[0]?.signatories[0]\n    );\n  };\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container spacing={0}>\n            <Grid item>\n              <PublishedWithChanges sx={{ fontSize: 50 }} color=\"primary\" />\n            </Grid>\n\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Management\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  Manage active vote\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Paper sx={{ px: 5, pb: 3, borderRadius: \"16px\" }} variant=\"outlined\">\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Vote Description\n            </Typography>\n            {assets.contracts[0]?.payload?.subject ?? \"No Active Vote\"}\n            <Divider sx={{ pt: 2 }} />\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Vote Options\n            </Typography>\n            <List>\n              {assets.contracts[0]?.payload?.options.map(\n                (item, currentItem) => (\n                  <ListItem key={item}>\n                    <ListItemText primary={currentItem + 1 + \". \" + item} />\n                  </ListItem>\n                )\n              ) ?? \"No Active Vote\"}\n            </List>\n            <Divider sx={{ pt: 2 }} />\n\n            {/* Number of voters */}\n            <Typography variant=\"h6\" sx={{ pt: 2 }}>\n              Number of voters\n            </Typography>\n            {assets.contracts[0]?.payload?.voters.length ?? \"No Active Vote\"}\n          </Paper>\n          <Box textAlign=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={buttonHandler}\n              className=\"button\"\n              name=\"Arcive Vote\"\n              sx={{ m: 2, alignItems: \"center\" }}\n            >\n              Delete Vote\n            </Button>\n          </Box>\n        </Paper>\n      </Box>\n      <HelpPopup\n        heading=\"Vote Management Help\"\n        content=\"\n          This page allows you to view the details of the current active vote. \\n\n          You can delete the vote by clicking the button at the bottom of the page. \\n\n          By deleting a vote, users will no longer be able to cast any more votes. \\n\n          Once the vote has been deleted you will be able to create a new vote.\n        \"\n      ></HelpPopup>\n    </Container>\n  );\n};\n\nexport default VoteManagement;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { Typography } from \"@mui/material\";\nimport { Voting } from \"@daml.js/votencrypt\";\nimport { useStreamQueries } from \"@daml/react\";\nimport dayjs from \"dayjs\";\n\nconst defaultRemainingTime = {\n  days: \"00\",\n  hours: \"00\",\n  minutes: \"00\",\n  seconds: \"00\",\n};\n/**\n * It takes a timestamp in milliseconds and returns an object with the remaining time until that\n * timestamp in days, hours, minutes, and seconds\n * @param {any} timestampMs - The timestamp in milliseconds that you want to get the remaining time\n * until.\n * @returns An object with the remaining time until the timestampMs.\n */\nfunction getRemainingTimeUntilMs(timestampMs: any) {\n  const timestampDayjs = dayjs(timestampMs);\n  const nowDayjs = dayjs();\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    return {\n      days: \"00\",\n      hours: \"00\",\n      minutes: \"00\",\n      seconds: \"00\",\n    };\n  }\n  return {\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs).toString(),\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs).toString(),\n    hours: getRemainingHours(nowDayjs, timestampDayjs).toString(),\n    days: getRemainingDays(nowDayjs, timestampDayjs).toString(),\n  };\n}\n/**\n * Get the difference between two dates in a specific unit of time.\n * @param {any} nowDayjs - The current time\n * @param {any} timestampDayjs - The timestamp that we want to count down to.\n * @returns The remaining time in seconds, minutes, hours, and days.\n */\nfunction getRemainingSeconds(nowDayjs: any, timestampDayjs: any) {\n  const seconds = timestampDayjs.diff(nowDayjs, \"seconds\") % 60;\n  return seconds;\n}\nfunction getRemainingMinutes(nowDayjs: any, timestampDayjs: any) {\n  const minutes = timestampDayjs.diff(nowDayjs, \"minutes\") % 60;\n  return minutes;\n}\nfunction getRemainingHours(nowDayjs: any, timestampDayjs: any) {\n  const hours = timestampDayjs.diff(nowDayjs, \"hours\") % 24;\n  return hours;\n}\nfunction getRemainingDays(nowDayjs: any, timestampDayjs: any) {\n  const days = timestampDayjs.diff(nowDayjs, \"days\");\n  return days;\n}\n/**\n * This function is a React component that uses the useStreamQueries hook to get the voteDeadlineUnix\n * value from the Voting contract. It then uses the useState hook to set the remainingTime state\n * variable to the defaultRemainingTime object. It then uses the useEffect hook to set an interval that\n * calls the updateRemainingTime function every second. The updateRemainingTime function uses the\n * getRemainingTimeUntilMs function to get the remaining time until the voteDeadlineUnix value. The\n * function then returns a Typography component that displays the remaining time\n * @returns A component that displays the remaining time until the vote deadline.\n */\nconst DeadLineCountDown: React.FC = () => {\n  const assets = useStreamQueries(Voting.Voting);\n  const voteDeadlineUnix = assets.contracts[0]?.payload?.deadLine || \"0\";\n  const voteDeadLineTimeMs = parseInt(voteDeadlineUnix) * 1000;\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      updateRemainingTime(voteDeadLineTimeMs);\n    }, 1000);\n    return () => clearInterval(intervalId);\n  }, [voteDeadLineTimeMs]);\n\n  function updateRemainingTime(countdown: any) {\n    setRemainingTime(getRemainingTimeUntilMs(countdown));\n  }\n\n  if (voteDeadlineUnix === \"0\") {\n    return <Typography> </Typography>;\n  } else {\n    return (\n      <>\n        <Typography variant=\"h5\">\n          Vote Ends In: {remainingTime.days} Days {remainingTime.hours} Hours{\" \"}\n          {remainingTime.minutes} Minutes {remainingTime.seconds} Seconds\n        </Typography>\n      </>\n    );\n  }\n};\n\nexport default DeadLineCountDown;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  List,\n  ListItem,\n  Container,\n  FormLabel,\n  FormControlLabel,\n  RadioGroup,\n  FormControl,\n  Typography,\n  Radio,\n  Divider,\n  Box,\n  Snackbar,\n  IconButton,\n  Paper,\n} from \"@mui/material\";\nimport { Close, HowToVote, Logout } from \"@mui/icons-material\";\nimport { Voting } from \"@daml.js/votencrypt\";\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\nimport { Link } from \"react-router-dom\";\nimport DeadLineCountDown from \"./DeadLineCountDown\";\n\ntype Props = {\n  onLogout: () => void;\n};\n\nconst VoteScreen: React.FC<Props> = ({ onLogout }) => {\n  const hashUsername = useParty();\n  const ledger = useLedger();\n  const [Voted, setVoted] = React.useState(false);\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n\n  const handleClose = (\n    event: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setPopup(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <Close fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  const assets = useStreamQueries(Voting.Voting);\n  const [radioStatus, setRadioStatus] = useState(\"\");\n  // get current unix time stamp\n  const now = new Date().getTime();\n\n  const buttonHandler = async () => {\n    if (radioStatus !== \"\") {\n      if (now < parseInt(assets.contracts[0]?.payload?.deadLine) * 1000) {\n        if (assets.contracts[0]?.payload.voted.includes(hashUsername)) {\n          setPopupText(\"You have already voted\");\n\n          setPopup(true);\n        } else {\n          /* Casting the vote. */\n          await ledger\n            .exerciseByKey(\n              Voting.Voting.Vote,\n              assets.contracts[0]?.signatories[0],\n              {\n                voter: hashUsername,\n                vote: radioStatus,\n                unixTime: now.toString(),\n              }\n            )\n            .catch(console.error);\n          setVoted(true);\n          setPopupText(\n            \"Your vote has been cast. Please logout or close the browser tab\"\n          );\n\n          setPopup(true);\n        }\n      } else {\n        setPopupText(\"The voting period has ended\");\n\n        setPopup(true);\n      }\n    } else {\n      setPopupText(\"Please select an option\");\n\n      setPopup(true);\n    }\n  };\n  if (Voted) {\n    return (\n      <>\n        <Box textAlign={\"right\"} sx={{ p: 1 }}>\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={<Logout />}\n            onClick={onLogout}\n            component={Link}\n            to=\"/\"\n          >\n            Log Out\n          </Button>\n        </Box>\n        <Container>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{ height: \"75vh\" }}\n          >\n            <Paper\n              sx={{ p: 3, borderRadius: \"16px\", width: \"90%\" }}\n              elevation={2}\n            >\n              <Grid container spacing={0}>\n                <Grid item>\n                  <HowToVote sx={{ fontSize: 50 }} color=\"primary\" />\n                </Grid>\n\n                <Grid item>\n                  <Grid item>\n                    <Typography variant=\"h5\" display=\"block\">\n                      Thank you for voting\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography\n                      variant=\"subtitle1\"\n                      color=\"secondary\"\n                      display=\"block\"\n                      style={{ lineHeight: \"15px\" }}\n                    >\n                      Vote has been cast\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Divider />\n\n              <Typography variant=\"h6\" sx={{ pt: 2 }}>\n                Vote Description\n              </Typography>\n              {assets.contracts[0]?.payload?.subject ?? \"Invalid Vote Key\"}\n              <Typography variant=\"h6\" sx={{ pt: 2 }}>\n                You Voted For\n              </Typography>\n              {radioStatus}\n\n              <Snackbar\n                open={Popup}\n                autoHideDuration={4000}\n                onClose={handleClose}\n                message={popupText}\n                action={action}\n              />\n            </Paper>\n          </Grid>\n        </Container>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <Box textAlign={\"right\"} sx={{ p: 1 }}>\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            startIcon={<Logout />}\n            onClick={onLogout}\n            component={Link}\n            to=\"/\"\n          >\n            Log Out\n          </Button>\n        </Box>\n        <Container>\n          <Grid\n            container\n            direction=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            style={{ height: \"75vh\" }}\n          >\n            <Paper\n              sx={{ p: 3, borderRadius: \"16px\", width: \"90%\" }}\n              elevation={2}\n            >\n              <Grid container spacing={0}>\n                <Grid item>\n                  <HowToVote sx={{ fontSize: 50 }} color=\"primary\" />\n                </Grid>\n\n                <Grid item>\n                  <Grid item>\n                    <Typography variant=\"h5\" display=\"block\">\n                      Vote\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography\n                      variant=\"subtitle1\"\n                      color=\"secondary\"\n                      display=\"block\"\n                      style={{ lineHeight: \"15px\" }}\n                    >\n                      Read the vote description carefully and choose an option\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Divider />\n              <DeadLineCountDown />\n\n              <Typography variant=\"h6\" sx={{ pt: 2 }}>\n                Vote Description\n              </Typography>\n              {assets.contracts[0]?.payload?.subject ?? \"Invalid Vote Key\"}\n\n              <Divider sx={{ pb: 2 }} />\n              <Box textAlign=\"center\">\n                <FormControl>\n                  <FormLabel id=\"demo-radio-buttons-group-label\">\n                    Options\n                  </FormLabel>\n                  <RadioGroup\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\n                    defaultValue=\"female\"\n                    name=\"radio-buttons-group\"\n                  >\n                    <List>\n                      {assets.contracts[0]?.payload?.options.map((item) => (\n                        <ListItem key={item}>\n                          <FormControlLabel\n                            value={item}\n                            control={<Radio />}\n                            label={item}\n                            onChange={(event) => {\n                              setRadioStatus(item);\n                            }}\n                          />\n                        </ListItem>\n                      ))}\n                    </List>\n                  </RadioGroup>\n                </FormControl>\n              </Box>\n              <Box textAlign=\"center\">\n                <Button\n                  variant=\"contained\"\n                  onClick={buttonHandler}\n                  className=\"button\"\n                  name=\"Create Vote\"\n                  sx={{ m: 2, alignItems: \"center\" }}\n                >\n                  Vote\n                </Button>\n              </Box>\n              <Snackbar\n                open={Popup}\n                autoHideDuration={4000}\n                onClose={handleClose}\n                message={popupText}\n                action={action}\n              />\n            </Paper>\n          </Grid>\n        </Container>\n      </>\n    );\n  }\n};\n\nexport default VoteScreen;\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport {\n  Divider,\n  Grid,\n  Container,\n  Paper,\n  Typography,\n  Box,\n  LinearProgress,\n} from \"@mui/material\";\nimport { Poll } from \"@mui/icons-material\";\n\nimport { Voting } from \"@daml.js/votencrypt\";\n\nimport { useStreamQueries } from \"@daml/react\";\n\nimport {\n  Pie,\n  PieChart,\n  Tooltip,\n  Bar,\n  BarChart,\n  Cell,\n  XAxis,\n  LabelList,\n  CartesianGrid,\n  YAxis,\n  Line,\n  LineChart,\n  Label,\n  ResponsiveContainer,\n} from \"recharts\";\n\nimport moment from \"moment\";\nimport HelpPopup from \"./HelpPopup\";\nimport DeadLineCountDown from \"./DeadLineCountDown\";\n\nconst VoteAnalytics: React.FC = () => {\n  /* This is getting the data from the ledger. */\n  const assets = useStreamQueries(Voting.Voting);\n  const votes = assets.contracts[0]?.payload?.votes || [];\n  const voters = assets.contracts[0]?.payload?.voters || [];\n  const voteTimes = assets.contracts[0]?.payload?.voteTimes || [];\n\n  const voteProgress = Math.round((votes.length / voters.length) * 100) || 0;\n\n  /* Creating a map of the votes and the frequency of the votes. */\n  const votesFrequency = useMemo(() => {\n    if (votes.length !== 0) {\n      const voteFrequencyMap = new Map<string, number>();\n      votes.forEach((vote) => {\n        if (voteFrequencyMap.has(vote)) {\n          voteFrequencyMap.set(vote, (voteFrequencyMap.get(vote) || 1) + 1);\n        } else {\n          voteFrequencyMap.set(vote, 1);\n        }\n      });\n      return [...voteFrequencyMap].map(([name, value]) => ({ name, value }));\n    } else {\n      return [\n        {\n          name: \"No Data\",\n          value: 0,\n        },\n      ];\n    }\n  }, [votes]);\n\n  // generate list of pastel colours based on length of data01\n  const colours = useMemo(() => {\n    const colours = [];\n    for (let i = 0; i < votesFrequency.length; i++) {\n      colours.push(`#${Math.random().toString(16).slice(2, 8)}`);\n    }\n    return colours;\n  }, [votesFrequency]);\n\n  // create a an array of objects with frequency in relationship with time\n  const votesFrequencyByTime = useMemo(() => {\n    if (votes.length !== 0) {\n      const map = new Map<number, number>();\n      voteTimes.forEach((voteTime) => {\n        var ajustedTime = voteTime.slice(0, -5) + \"00000\";\n        if (map.has(parseInt(ajustedTime))) {\n          map.set(\n            parseInt(ajustedTime),\n            (map.get(parseInt(ajustedTime)) || 1) + 1\n          );\n        } else {\n          map.set(parseInt(ajustedTime), 1);\n        }\n      });\n      return [...map].map(([time, value]) => ({ time, value })).reverse();\n    } else {\n      return [\n        {\n          time: 1,\n          value: 0,\n        },\n      ];\n    }\n  }, [voteTimes]);\n\n  /* This is a custom tooltip for the line chart. */\n  const LineTooltip = ({\n    active,\n    payload,\n  }: {\n    active: any;\n    payload: any;\n    label: any;\n  }) => {\n    if (active) {\n      return (\n        <Paper sx={{ px: 2, py: 1 }}>\n          <div className=\"custom-tooltip\">\n            <Typography>Votes: {payload[0].value}</Typography>\n          </div>\n        </Paper>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container spacing={0}>\n            <Grid item>\n              <Poll sx={{ fontSize: 50 }} color=\"primary\" />\n            </Grid>\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Analytics\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  View current vote results\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Divider />\n          <Box sx={{ pt: 3 }}>\n            <DeadLineCountDown />\n          </Box>\n          <Typography variant=\"h5\">Votes Counted: {voteProgress}%</Typography>\n\n          <LinearProgress variant=\"determinate\" value={voteProgress} />\n\n          <Grid container justifyContent=\"center\" alignItems=\"center\">\n            <Grid item>\n              <BarChart width={400} height={100} data={votesFrequency}>\n                <XAxis dataKey=\"name\" />\n                <Tooltip\n                  cursor={{ fill: \"transparent\" }}\n                  content={<LineTooltip active=\"\" payload=\"\" label=\"\" />}\n                />\n                <Bar dataKey=\"value\" fill=\"#387DF6\">\n                  {votesFrequency.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colours[index]} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </Grid>\n            <Grid item>\n              <PieChart width={400} height={400}>\n                <Pie data={votesFrequency} dataKey=\"value\" nameKey=\"name\">\n                  {votesFrequency.map((entry, index) => (\n                    <Cell key={`cell-${index}`} fill={colours[index]} />\n                  ))}\n\n                  <LabelList dataKey=\"name\" />\n                </Pie>\n                <Tooltip\n                  content={<LineTooltip active=\"\" payload=\"\" label=\"\" />}\n                />\n              </PieChart>\n            </Grid>\n          </Grid>\n          <Typography variant=\"h5\" textAlign=\"center\">\n            Votes Over Time\n          </Typography>\n          <Box style={{ width: \"100%\", height: \"20vh\" }} textAlign=\"center\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                width={500}\n                height={300}\n                data={votesFrequencyByTime}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 20,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis\n                  dataKey=\"time\"\n                  tickFormatter={(unixTime) =>\n                    moment(unixTime).format(\"HH:mm Do\")\n                  }\n                >\n                  <Label value=\"Time\" fill=\"#387DF6\" position=\"bottom\" />\n                </XAxis>\n                <YAxis allowDecimals={false}>\n                  <Label value=\"Votes\" fill=\"#387DF6\" angle={-90} />\n                </YAxis>\n                <Tooltip\n                  content={<LineTooltip active=\"\" payload=\"\" label=\"\" />}\n                />\n                <Line\n                  type=\"monotone\"\n                  name=\"Votes\"\n                  dataKey=\"value\"\n                  stroke=\"#387DF6\"\n                  activeDot={{ r: 8 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </Box>\n        </Paper>\n      </Box>\n      <HelpPopup\n        heading=\"Vote Analytics Help\"\n        content=\"\n          This page shows the current vote results and the vote progress. \\n\n          The vote progress shows the percentage of votes cast out of the total number of votes. \\n\n          The votes cast over time chart shows the number of votes that have been cast in relationship to time. \\n\n        \"\n      ></HelpPopup>\n    </Container>\n  );\n};\n\nexport default VoteAnalytics;\n","import React, { useState } from \"react\";\n\nimport {\n  Button,\n  Container,\n  Slider,\n  List,\n  ListItem,\n  ListItemText,\n  TextField,\n  Typography,\n  Box,\n  Snackbar,\n  Grid,\n  Divider,\n  IconButton,\n  Paper,\n} from \"@mui/material\";\n\nimport {\n  Key,\n  Ballot,\n  Delete,\n  Close,\n  KeyboardReturn,\n} from \"@mui/icons-material\";\n\nimport { Voting } from \"@daml.js/votencrypt\";\n\nimport { useParty, useLedger, useStreamQueries } from \"@daml/react\";\n\nimport { createHash } from \"crypto\";\n\nimport HelpPopup from \"./HelpPopup\";\n\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { MobileDateTimePicker } from \"@mui/x-date-pickers/MobileDateTimePicker\";\n\nlet hashedVoteKeys: string[] = [];\n\n/**\n * This function contains the main create vote screen.\n */\nconst MainView: React.FC = () => {\n  const hashUsername = useParty();\n  const [optionList, setOptionList] = useState<string[]>([]);\n  const [voteKeys, setVoteKeys] = useState<string[]>([]);\n  const [value, setValue] = React.useState<number>(10);\n  const [subjectText, setSubjectText] = useState(\"\");\n  const [optionText, setOptionText] = useState(\"\");\n  const [Popup, setPopup] = React.useState(false);\n  const [popupText, setPopupText] = React.useState(\"\");\n  const [dateTimeVal, setDateTimeVal] = React.useState<Date | null>(new Date());\n  const [error, setError] = React.useState({\n    Subject: false,\n    Option: false,\n  });\n  const [voteNotCreated, setVoteNotCreated] = React.useState(true);\n\n  const assets = useStreamQueries(Voting.Voting);\n  const today = new Date();\n\n  const ledger = useLedger();\n\n  let crypto = require(\"crypto\");\n\n  /**\n   * The buttonHandler function is called when the user clicks the \"Create Vote\" button. It generates a\n   * set of vote keys, stores them in local storage, and then creates a new vote contract on the ledger\n   */\n  const buttonHandler = async (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    let updatedObj = {\n      Subject: false,\n      Option: false,\n    };\n    /* Checking if the subjectText and optionList are empty. If they are empty, it will set the Subject and\n  Option to true. If they are not empty, it will set the Subject and Option to false. */\n\n    if (subjectText.length === 0) {\n      updatedObj = { ...updatedObj, Subject: true };\n    } else {\n      updatedObj = { ...updatedObj, Subject: false };\n    }\n\n    if (optionList.length === 0) {\n      updatedObj = { ...updatedObj, Option: true };\n    } else {\n      updatedObj = { ...updatedObj, Option: false };\n    }\n\n    setError(updatedObj);\n\n    if (dateTimeVal !== null) {\n      if (\n        subjectText !== \"\" &&\n        optionList.length !== 0 &&\n        dateTimeVal.getTime() > today.getTime()\n      ) {\n        if (assets.contracts.length === 0) {\n          /* The bellow code is creating a vote. */\n          const keys = generateVoteKeys(value);\n          setVoteKeys(keys[0]);\n          if (dateTimeVal !== null) {\n            var stringDate = Math.floor(dateTimeVal.getTime() / 1000);\n          } else {\n            var stringDate = 0;\n          }\n\n          const voteDetails = {\n            username: hashUsername,\n            deadLine: stringDate.toString(),\n            voters: hashedVoteKeys,\n            votes: [],\n            voted: [],\n            voteTimes: [],\n            options: optionList,\n            subject: subjectText,\n          };\n          ledger.create(Voting.Voting, voteDetails);\n          setPopupText(\"Vote Created. Save Keys Before Closing App\");\n          setPopup(true);\n          setVoteNotCreated(false);\n        } else {\n          setPopupText(\"Vote In Progress\");\n          setPopup(true);\n        }\n      }\n    }\n  };\n\n  function hash(input: string) {\n    return createHash(\"sha256\").update(input).digest(\"hex\");\n  }\n\n  /**\n   * It takes a number as an argument and returns an array of two arrays, the first of which contains a\n   * number of random strings equal to the number passed in, and the second of which contains the SHA256\n   * hashes of those strings\n   * @param {any} voterCount - The number of voters in the election.\n   * @returns An array of voteKeys and hashedVoteKeys\n   */\n  const generateVoteKeys = (voterCount: number) => {\n    for (let i = 0; i < voterCount; i++) {\n      let key = crypto.randomBytes(20).toString(\"hex\");\n      voteKeys.push(`${key}`);\n      hashedVoteKeys.push(hash(key));\n    }\n    return [voteKeys, hashedVoteKeys];\n  };\n\n  /**\n   * If the optionText is not in the optionList, then add it to the start of the optionList\n   */\n  const addOption = () => {\n    if (optionList.includes(optionText)) {\n      setPopupText(\"Option already exists\");\n      setPopup(true);\n    } else {\n      setOptionText(\"\");\n      // append optionText to the start of optionList\n      setOptionList([optionText, ...optionList]);\n    }\n  };\n\n  // copy voteKeys to clipboard\n  const copyVoteKeys = () => {\n    navigator.clipboard.writeText(voteKeys.join(\"\\n\"));\n    setPopupText(\"Keys Copied To Clipboard\");\n    setPopup(true);\n  };\n\n  // export voteKeys to csv\n  const exportVoteKeys = () => {\n    const csv = voteKeys.join(\"\\n\");\n    const blob = new Blob([csv], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = subjectText + \".csv\";\n    link.click();\n    setPopupText(\"Keys Exported\");\n    setPopup(true);\n  };\n\n  /**\n   * A function that closes the popup.\n   * @param {React.SyntheticEvent | Event} event - React.SyntheticEvent | Event\n   * @param {string} [reason] - The reason for the close. Can be one of \"timeout\", \"clickaway\",\n   * \"escapeKeyDown\", or \"offscreen\".\n   * @returns The return statement is returning the following:\n   */\n  const handleClose = (\n    event: React.SyntheticEvent | Event,\n    reason?: string\n  ) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setPopup(false);\n  };\n  const action = (\n    <React.Fragment>\n      <IconButton\n        size=\"small\"\n        aria-label=\"close\"\n        color=\"inherit\"\n        onClick={handleClose}\n      >\n        <Close fontSize=\"small\" />\n      </IconButton>\n    </React.Fragment>\n  );\n\n  return (\n    <Container>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            <Ballot sx={{ fontSize: 45 }} color=\"primary\" />\n            <Typography variant=\"h5\">Create A Vote</Typography>\n          </div>\n          <Divider sx={{ p: 0 }} />\n\n          <Typography variant=\"h6\" sx={{ pt: 2 }}>\n            What is the vote on?\n          </Typography>\n          <Box textAlign=\"center\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Subject\"\n              variant=\"outlined\"\n              value={subjectText}\n              onClick={() => {\n                setError({ ...error, Subject: false });\n              }}\n              onChange={(event) => {\n                setSubjectText(event.target.value);\n              }}\n              error={error.Subject}\n              style={{ width: \"94%\" }}\n              sx={{ m: 2 }}\n            />\n          </Box>\n          <Typography variant=\"h6\">Voters: {value}</Typography>\n\n          <Box textAlign=\"center\">\n            <Slider\n              value={value}\n              aria-label=\"Default\"\n              valueLabelDisplay=\"auto\"\n              name=\"slider\"\n              sx={{ m: 2 }}\n              style={{ width: \"95%\" }}\n              onChange={(event: any) => {\n                setValue(event.target.value);\n              }}\n            />\n          </Box>\n          <Typography variant=\"h6\">Options: {optionList.length}</Typography>\n          <Box textAlign=\"center\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Option\"\n              variant=\"outlined\"\n              value={optionText}\n              error={error.Option}\n              onClick={() => {\n                setError({ ...error, Option: false });\n              }}\n              onChange={(event) => {\n                setOptionText(event.target.value);\n              }}\n              onKeyPress={(event) => {\n                if (event.key === \"Enter\") {\n                  event.preventDefault();\n                  addOption();\n                }\n              }}\n              style={{ width: \"95%\" }}\n              sx={{ m: 2 }}\n              InputProps={{\n                endAdornment: (\n                  <IconButton onClick={addOption}>\n                    <KeyboardReturn />\n                  </IconButton>\n                ),\n              }}\n            />\n\n            <List style={{ width: \"95%\" }} sx={{ ml: 2 }}>\n              {optionList.map((item) => (\n                <ListItem\n                  key={item}\n                  secondaryAction={\n                    <IconButton\n                      edge=\"end\"\n                      aria-label=\"delete\"\n                      onClick={(e) => {\n                        setOptionList((optionList) =>\n                          optionList.filter((i) => i !== item)\n                        );\n                      }}\n                    >\n                      <Delete />\n                    </IconButton>\n                  }\n                >\n                  <ListItemText primary={item} />\n                </ListItem>\n              ))}\n            </List>\n          </Box>\n\n          <Box textAlign=\"center\">\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <MobileDateTimePicker\n                label=\"Vote Deadline\"\n                value={dateTimeVal}\n                minDateTime={today}\n                onChange={(newValue) => {\n                  setDateTimeVal(newValue);\n                }}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </LocalizationProvider>\n          </Box>\n          <Box textAlign=\"center\">\n            <Button\n              variant=\"contained\"\n              onClick={buttonHandler}\n              className=\"button\"\n              name=\"Create Vote\"\n              sx={{ m: 2, alignItems: \"center\" }}\n            >\n              Create Vote\n            </Button>\n          </Box>\n          <Snackbar\n            open={Popup}\n            onClose={handleClose}\n            message={popupText}\n            action={action}\n          />\n        </Paper>\n      </Box>\n      <Box sx={{ p: 1 }}>\n        <Paper sx={{ p: 3, borderRadius: \"16px\" }} elevation={2}>\n          <Grid container>\n            <Grid item>\n              <Key sx={{ fontSize: 45 }} color=\"primary\" />\n            </Grid>\n\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"h5\" display=\"block\">\n                  Vote Keys\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"secondary\"\n                  display=\"block\"\n                  style={{ lineHeight: \"15px\" }}\n                >\n                  Send each voter a key to vote\n                </Typography>\n              </Grid>\n            </Grid>\n            <Box textAlign=\"right\" sx={{ flexGrow: 1 }}>\n              <Button\n                sx={{ margin: 1 }}\n                variant=\"contained\"\n                onClick={exportVoteKeys}\n                disabled={voteNotCreated}\n              >\n                Export CSV\n              </Button>\n              <Button\n                variant=\"contained\"\n                onClick={copyVoteKeys}\n                disabled={voteNotCreated}\n              >\n                Copy To Clipboard\n              </Button>\n            </Box>\n          </Grid>\n\n          <List\n            sx={{\n              width: \"100%\",\n              bgcolor: \"background.paper\",\n              borderRadius: \"16px\",\n              position: \"relative\",\n              overflow: \"auto\",\n              maxHeight: 300,\n              \"& ul\": { padding: 0 },\n              padding: 1,\n\n              \"&::-webkit-scrollbar\": {\n                width: 10,\n              },\n              \"&::-webkit-scrollbar-track\": {\n                backgroundColor: \"black\",\n              },\n              \"&::-webkit-scrollbar-thumb\": {\n                backgroundColor: \"#808080\",\n                borderRadius: 2,\n              },\n              overflowX: \"hidden\",\n            }}\n            subheader={<li />}\n          >\n            {[0].map((sectionId) => (\n              <li key={`section-${sectionId}`}>\n                <ul>\n                  {voteKeys.map((item) => (\n                    <ListItem key={`item-${sectionId}-${item}`}>\n                      <ListItemText primary={`${item}`} />\n                    </ListItem>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </List>\n        </Paper>\n      </Box>\n      <HelpPopup\n        heading=\"How To Create A Vote\"\n        content=\"\n          1. Enter the subject of the vote.\\n\n          2. Enter the number of voters.\\n\n          3. Enter the options.\\n\n          4. Click on the Create Vote button.\\n\n          5. The vote will be created.\\n\n          Vote keys allow voters to authenticate themselves when they vote. Make sure you send one vote key to each voter. A vote key can be used only once.\n        \"\n      ></HelpPopup>\n    </Container>\n  );\n};\n\nexport default MainView;\n","import React from \"react\";\nimport { LoginScreenVote, LandingScreen } from \"./LoginScreen\";\nimport { LogoutConfirm, PageNotFound } from \"./CatchNotFound\";\nimport MainScreen from \"./MainScreen\";\nimport VoteManagement from \"./VoteManagement\";\nimport VoteScreen from \"./VoteScreen\";\nimport DamlLedger from \"@daml/react\";\nimport Credentials from \"../Credentials\";\nimport { httpBaseUrl, wsBaseUrl } from \"../config\";\nimport { Route, Routes } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport VoteAnalytics from \"./VoteAnalytics\";\nimport MainView from \"./MainView\";\nimport { createTheme, ThemeProvider, useMediaQuery } from \"@mui/material\";\n\nconst App: React.FC = () => {\n  const [credentials, setCredentials] = React.useState<\n    Credentials | undefined\n  >();\n  // create a dark theme light theme switcher\n  const preferedScheme = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  /* Creating a theme for the app. */\n  const theme = React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          mode: preferedScheme ? \"dark\" : \"light\",\n          primary: {\n            main: \"#387DF6\",\n          },\n          secondary: {\n            main: \"#666666\",\n          },\n        },\n\n        typography: {\n          fontFamily: \"'Inter', sans-serif\",\n          subtitle1: {\n            fontSize: 16,\n          },\n          h5: {\n            fontWeight: 700,\n            fontSize: 24,\n          },\n          h6: {\n            fontWeight: 500,\n          },\n        },\n      }),\n    [preferedScheme]\n  );\n\n  return credentials ? (\n    <DamlLedger\n      token={credentials.token}\n      party={credentials.party}\n      httpBaseUrl={httpBaseUrl}\n      wsBaseUrl={wsBaseUrl}\n    >\n      <ThemeProvider theme={theme}>\n        <CssBaseline enableColorScheme />\n        <div>\n          <Routes>\n            <Route\n              path=\"/Vote\"\n              element={\n                <>\n                  <VoteScreen onLogout={() => setCredentials(undefined)} />\n                </>\n              }\n            ></Route>\n            <Route\n              path=\"/CreateVote\"\n              element={\n                <>\n                  {\" \"}\n                  <MainScreen onLogout={() => setCredentials(undefined)} />\n                  <MainView />\n                </>\n              }\n            ></Route>\n            <Route\n              path=\"/VoteAnalytics\"\n              element={\n                <>\n                  <MainScreen onLogout={() => setCredentials(undefined)} />\n                  <VoteAnalytics />\n                </>\n              }\n            ></Route>\n\n            <Route\n              path=\"/VoteManagement\"\n              element={\n                <>\n                  <MainScreen onLogout={() => setCredentials(undefined)} />\n                  <VoteManagement />\n                </>\n              }\n            ></Route>\n\n            <Route\n              path=\"*\"\n              element={\n                <LogoutConfirm onLogout={() => setCredentials(undefined)} />\n              }\n            ></Route>\n          </Routes>\n          {/* </Scrollbars> */}\n        </div>\n      </ThemeProvider>\n    </DamlLedger>\n  ) : (\n    <ThemeProvider theme={theme}>\n      <CssBaseline enableColorScheme />\n\n      <div>\n        <Routes>\n          <Route\n            path=\"/\"\n            element={<LandingScreen onLogin={setCredentials} />}\n          ></Route>\n          <Route\n            path=\"/VoteLogin/*\"\n            element={<LoginScreenVote onLogin={setCredentials} />}\n          ></Route>\n          <Route\n            path=\"/VoteLogin\"\n            element={<LoginScreenVote onLogin={setCredentials} />}\n          ></Route>\n          <Route path=\"*\" element={<PageNotFound />}></Route>\n        </Routes>\n      </div>\n    </ThemeProvider>\n  );\n};\n// APP_END\n\nexport default App;\n","\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\n\nconst Auth0ProviderWithHistory = ({ children }) => {\n/* The bellow code is setting the domain and clientId variables to the values of the environment\nvariables REACT_APP_AUTH0_DOMAIN and REACT_APP_AUTH0_CLIENT_ID. */\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const navigate = useNavigate();\n\n  const onRedirectCallback = (appState) => {\n    navigate(appState?.returnTo || window.location.pathname);\n  };\n\n  /* Returning the Auth0Provider component with the domain, clientId, redirectUri, and\n  onRedirectCallback props. */\n  return (\n    <Auth0Provider\n      domain={domain}\n      clientId={clientId}\n      redirectUri={window.location.origin}\n      onRedirectCallback={onRedirectCallback}\n    >\n      {children}\n    </Auth0Provider>\n  );\n};\n\nexport default Auth0ProviderWithHistory;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Auth0ProviderWithHistory from \"./auth/auth0-provider-with-history.js\";\n\n/* Rendering the App component to the DOM. */\n\nReactDOM.render(\n  <Router>\n    <Auth0ProviderWithHistory>\n      <App />\n    </Auth0ProviderWithHistory>\n  </Router>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}